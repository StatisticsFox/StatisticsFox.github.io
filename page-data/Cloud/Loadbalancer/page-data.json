{"componentChunkName":"component---src-templates-blog-template-js","path":"/Cloud/Loadbalancer/","result":{"data":{"cur":{"id":"d65508b6-6427-511e-9cb6-6ddb7e63e3ab","html":"<h2 id=\"들어가기에-앞서\" style=\"position:relative;\"><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C\" aria-label=\"들어가기에 앞서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들어가기에 앞서</h2>\n<p>최근에 BOAZ 동아리에서 Oauto2와 goole calender를 이용해서 웹 서비스를 만드는 프로젝트를 진행하는데(<del>계획에 전혀없던 리액트까지 써보는중🥲</del>) 전반적인 인프라 구성을 내가 맡았다. 이때, 도메인을 AWS EC2에 등록하는 과정에서 로드밸런서를 사용하게 되었다. ALB 로드 밸런서에 SSL 인증을 적용하면 각 Ec2 인스턴스 마다 SSL을 처리하지 않아도 HTTPS 트래픽을 처리할 수 있기에 반드시 필요한 부분이었다. 그 과정에서 로드 밸런서를 단순히 “그냥 부하분산 아님?”으로 알고 있던 나에게 개념정리가 꼭 필요한 부분이라 이번 글을 작성하게 되었다. 그럼 시작해보자\n<img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21211&#x26;authkey=%21AInaQqp_g1hhKd0&#x26;width=564&#x26;height=311\" alt=\"시작해보자\"></p>\n<h2 id=\"core\" style=\"position:relative;\"><a href=\"#core\" aria-label=\"core permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Core</h2>\n<p>기본적으로 로드밸런서는 Scale out에서 사용된다. 서비스는 성장하는데 늘어나는 트래픽을 서버가 감당할 수 없을때 서버를 증설하는데 이 과정에서 각 서버에 걸리는 부하를 고르게 나누기 위해서는 로드밸런싱이 필수적으로 동반되어야 한다.</p>\n<blockquote>\n<p>즉 다양한 곳에서 들어오는<font color=\"#c00000\"> 트래픽을 여러 서버에 분산</font>시켜 하나의 서버에 부담이 가지 않도록 하는 것이 로드밸런싱의 주요 목적이며, 이를 통해 <font color=\"#c00000\">서버의 성능과 안정성을 높일 수 있다.</font></p>\n</blockquote>\n<h2 id=\"로드밸런싱의-이점\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EB%93%9C%EB%B0%B8%EB%9F%B0%EC%8B%B1%EC%9D%98-%EC%9D%B4%EC%A0%90\" aria-label=\"로드밸런싱의 이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로드밸런싱의 이점</h2>\n<h3 id=\"가용성\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%9A%A9%EC%84%B1\" aria-label=\"가용성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가용성</h3>\n<p>서버에 장애가 발생하거나 업데이트를 해야 하는 상황에 서버가 가동 중지된다면 애플리케이션은 사용할 수 없다. 로드밸런서는 이러한 문제를 자동으로 감지하고 사용가능한 서버로 리다이렉션하는 관리자 같은 역할을 한다.</p>\n<h3 id=\"확장성\" style=\"position:relative;\"><a href=\"#%ED%99%95%EC%9E%A5%EC%84%B1\" aria-label=\"확장성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>확장성</h3>\n<p>한 서버에 트래픽이 몰리는 병목현상을 방지하고 트래픽을 예측하여 다른 서버를 추가하거나 제거한다.</p>\n<h3 id=\"보안\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%95%88\" aria-label=\"보안 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보안</h3>\n<p>크롤링이나 악성 프로그램 등 공격자가 서버 장애를 일으키는 수백만 개의 동시 요청으로 애플리케이션 서버를 가득 채우는 공격을 방지하거나 최소화한다.</p>\n<h3 id=\"성능\" style=\"position:relative;\"><a href=\"#%EC%84%B1%EB%8A%A5\" aria-label=\"성능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>성능</h3>\n<p>응답 시간을 늘리고 네트워크 지연 시간을 줄여 애플리케이션 성능을 향상합니다.</p>\n<h2 id=\"로드밸런싱-알고리즘\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EB%93%9C%EB%B0%B8%EB%9F%B0%EC%8B%B1-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\"로드밸런싱 알고리즘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로드밸런싱 알고리즘</h2>\n<p>로드벨런싱에도 여러 알고즘이 존재하는데 가장 흔한 것이 라운드 로빈, 가중치 분배, 최소연결 방식이 있다. 다만 서로 다른 적합한 케이스가 존재하기 때문에 사용환경에 따라 적절한 로드 밸런서를 선택해야 한다.</p>\n<p>먼저 정적 로드 밸런싱에 대해서 알아보자</p>\n<h3 id=\"라운드-로빈-방식round-robin-method\" style=\"position:relative;\"><a href=\"#%EB%9D%BC%EC%9A%B4%EB%93%9C-%EB%A1%9C%EB%B9%88-%EB%B0%A9%EC%8B%9Dround-robin-method\" aria-label=\"라운드 로빈 방식round robin method permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>라운드 로빈 방식(Round Robin Method)</h3>\n<p>포커 칠때 딜러가 카드 돌리는 것을 생각하면 된다. 딜러가 카드를 왼쪽 사람부터 차례차례 카드를 건내주고 마지막 사람까지 다 주면 다시 처음 줬단 사람으로 되돌아가 주는 것을 반복하는데 해당 방식도 서버 A, B, C 가 있다면 A → B → C → A 순서대로 분배한다. 보통 모든 서버가 같은 양일때 이렇게 한다.</p>\n<h3 id=\"가중치-기반-라운드-로빈-방식weighted-round-robin-method\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A4%91%EC%B9%98-%EA%B8%B0%EB%B0%98-%EB%9D%BC%EC%9A%B4%EB%93%9C-%EB%A1%9C%EB%B9%88-%EB%B0%A9%EC%8B%9Dweighted-round-robin-method\" aria-label=\"가중치 기반 라운드 로빈 방식weighted round robin method permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가중치 기반 라운드 로빈 방식(Weighted Round Robin Method)</h3>\n<p>여러 서버가 같은 사양이 아니고, 특정 서버의 스펙이 더 좋은 경우 이 방식을 사용한다. 5살짜리와 20살짜리가 밥을 먹는데 당연히 20살 짜리에게 밥을 더 많이 주는 것처럼 그릇 큰놈한테 트래픽 처리량 몰아주는 방식이다.</p>\n<h3 id=\"ip-해시-방식ip-hash-method\" style=\"position:relative;\"><a href=\"#ip-%ED%95%B4%EC%8B%9C-%EB%B0%A9%EC%8B%9Dip-hash-method\" aria-label=\"ip 해시 방식ip hash method permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IP 해시 방식(IP Hash Method)</h3>\n<p>여기서는 수학적 계산인 해싱이라는 기법이 들어가는데 사용자 ip를 기준으로 해싱하여 사용자가 항상 동일한 서버로 연결되는 것을 보장한다. 우리 집 와이파이로 어떤 서비스에 접속하면 우리집 와이파이는 그 서비스의 항상 같은 서버로 연결된다.</p>\n<p>다음은 동적 로드 밸런싱에 대해 알아보자</p>\n<h3 id=\"최소-연결-방법least-connection-method\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%86%8C-%EC%97%B0%EA%B2%B0-%EB%B0%A9%EB%B2%95least-connection-method\" aria-label=\"최소 연결 방법least connection method permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최소 연결 방법(Least Connection Method)</h3>\n<p>모든 서버가 같은 스펙을 지닌것을 가정하고 적용하는 방식으로 한마디로 ‘저울’과 같다. 연결이 적은 서버를 확인하고 그 서버로 트래픽을 분할한다. 저울이 평행할 수 있도록!</p>\n<h3 id=\"최소-응답-시간-방법least-response-time-method\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%86%8C-%EC%9D%91%EB%8B%B5-%EC%8B%9C%EA%B0%84-%EB%B0%A9%EB%B2%95least-response-time-method\" aria-label=\"최소 응답 시간 방법least response time method permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최소 응답 시간 방법(Least Response Time Method)</h3>\n<p>이 방식은 개발자가 아닌 사용자가 얼마나 더 만족할까를 고민한 흔적이 보이는 로드밸런싱이다. 즉, 서버의 현재 연결상태 그리고 응답시간을 고려해서 가장 짧은 응답시간을 보내는 서버로 트래픽을 할당한다. 즉 한 서버에 여유가 없더라도 조건에 부합한다면 그 서버에 트래픽을 할당한다.</p>\n<h2 id=\"aws-로드-밸런서-유형\" style=\"position:relative;\"><a href=\"#aws-%EB%A1%9C%EB%93%9C-%EB%B0%B8%EB%9F%B0%EC%84%9C-%EC%9C%A0%ED%98%95\" aria-label=\"aws 로드 밸런서 유형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS 로드 밸런서 유형</h2>\n<p>솔직히 한번에 이해하는건 어렵기 때문에 경찰에 비유해서 설명해 보고자 한다.</p>\n<h3 id=\"albapplication-load-balancer\" style=\"position:relative;\"><a href=\"#albapplication-load-balancer\" aria-label=\"albapplication load balancer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ALB(Application Load Balancer)</h3>\n<p>먼저 ALB는 HTTP/HTTPS 기반으로 요청을 관리하는 즉, 경찰서 들어가면 앞에 앉은 말단 경찰이다. 그들은 시민과 직접 대화하기에 세심하게 신고인의 요구를 파악하고 관련 부서로 연결을 해준다.</p>\n<ul>\n<li>예를 들어 “사기를 당했어요..” 라고 하면 사이버 범죄일까요? 아니면 금융, 피싱? 이렇게 물어본 후 각 상황에 맞는 부서에 연결 시켜 준다.</li>\n<li>즉, ALB는 HTTP 요청을 매우 세세하게 분석해서 그 요청에 맞는 서버로 트래픽을 보낸다. 사용자마다 다른 페이지나 기능으로 연결할때 매우 유용하다.</li>\n</ul>\n<h3 id=\"nlbnetwork-load-balancer\" style=\"position:relative;\"><a href=\"#nlbnetwork-load-balancer\" aria-label=\"nlbnetwork load balancer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NLB(Network Load Balancer)</h3>\n<p>NLB는 TCP/UDP 기반으로 트래픽을 처리하는 로드 밸런서로 교차로에서 차들이 오갈 때 신호를 보고 빠르게 교통 흐름을 관리하는 교통경찰과 비슷하다.</p>\n<ul>\n<li>교통경찰들은 이 차가 무슨 차인지 어떤 목적을 가지고 가는 차인지 관심 없고 그냥 신호가 맞으면 빠르게 통과시킨다.</li>\n<li>이처럼 세부적인 정보보다는 IP 주소나 TCP 연결을 기반으로 트래픽을 빠르게 처리하고, 고속 통신이 필요한 비스에 적합하다.</li>\n</ul>\n<h3 id=\"elbelastic-load-balancer\" style=\"position:relative;\"><a href=\"#elbelastic-load-balancer\" aria-label=\"elbelastic load balancer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ELB(Elastic Load Balancer)</h3>\n<p>ELB는 기본적인 트래픽 관리 기능만 제공하는 비교적 간단한 녀석이다. 예를들면 단순히 경찰청 사이트라고 생각하면 되겠다.</p>\n<ul>\n<li>인터넷 사기 당했는데 어디로 갈까요 라고 물어보면 단순히 사기 담당 부서 위치만 알려주고 끝내는 느낌이다.</li>\n<li>즉, 요즘은 ALB나 NLB처럼 더 세부적이거나 빠른 트래픽 처리를 위한 로드 밸런서가 더 많이 사용한다.</li>\n</ul>\n<h2 id=\"따라서\" style=\"position:relative;\"><a href=\"#%EB%94%B0%EB%9D%BC%EC%84%9C\" aria-label=\"따라서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>따라서..</h2>\n<blockquote>\n<ul>\n<li>ALB: 웹 애플리케이션에서 사용자마다 맞춤형 응답이 필요한 경우.</li>\n<li>NLB: 빠른 네트워크 트래픽 처리, 실시간 데이터 전송이 필요한 경우.</li>\n<li>ELB: 간단한 트래픽 관리가 필요한 경우, 예전부터 사용된 안정적인 방식.</li>\n</ul>\n</blockquote>\n<p>이렇게 로드 밸런서의 개념과 AWS에 있는 3가지 로드 밸런서에 대해 알아보았다. 세월이 지나면 분명 까먹을 것이 뻔하기 때문에 최대한 쉽게 이해하려고 노력해봤다 ㅎ. 로드 밸런서 하면 뭐다? 경찰이다~~ 하면 이 내용들이 머리속에서 잘 생각나지 않을까 한다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C\">들어가기에 앞서</a></p>\n</li>\n<li>\n<p><a href=\"#core\">Core</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A1%9C%EB%93%9C%EB%B0%B8%EB%9F%B0%EC%8B%B1%EC%9D%98-%EC%9D%B4%EC%A0%90\">로드밸런싱의 이점</a></p>\n<ul>\n<li><a href=\"#%EA%B0%80%EC%9A%A9%EC%84%B1\">가용성</a></li>\n<li><a href=\"#%ED%99%95%EC%9E%A5%EC%84%B1\">확장성</a></li>\n<li><a href=\"#%EB%B3%B4%EC%95%88\">보안</a></li>\n<li><a href=\"#%EC%84%B1%EB%8A%A5\">성능</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%A1%9C%EB%93%9C%EB%B0%B8%EB%9F%B0%EC%8B%B1-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\">로드밸런싱 알고리즘</a></p>\n<ul>\n<li><a href=\"#%EB%9D%BC%EC%9A%B4%EB%93%9C-%EB%A1%9C%EB%B9%88-%EB%B0%A9%EC%8B%9Dround-robin-method\">라운드 로빈 방식(Round Robin Method)</a></li>\n<li><a href=\"#%EA%B0%80%EC%A4%91%EC%B9%98-%EA%B8%B0%EB%B0%98-%EB%9D%BC%EC%9A%B4%EB%93%9C-%EB%A1%9C%EB%B9%88-%EB%B0%A9%EC%8B%9Dweighted-round-robin-method\">가중치 기반 라운드 로빈 방식(Weighted Round Robin Method)</a></li>\n<li><a href=\"#ip-%ED%95%B4%EC%8B%9C-%EB%B0%A9%EC%8B%9Dip-hash-method\">IP 해시 방식(IP Hash Method)</a></li>\n<li><a href=\"#%EC%B5%9C%EC%86%8C-%EC%97%B0%EA%B2%B0-%EB%B0%A9%EB%B2%95least-connection-method\">최소 연결 방법(Least Connection Method)</a></li>\n<li><a href=\"#%EC%B5%9C%EC%86%8C-%EC%9D%91%EB%8B%B5-%EC%8B%9C%EA%B0%84-%EB%B0%A9%EB%B2%95least-response-time-method\">최소 응답 시간 방법(Least Response Time Method)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#aws-%EB%A1%9C%EB%93%9C-%EB%B0%B8%EB%9F%B0%EC%84%9C-%EC%9C%A0%ED%98%95\">AWS 로드 밸런서 유형</a></p>\n<ul>\n<li><a href=\"#albapplication-load-balancer\">ALB(Application Load Balancer)</a></li>\n<li><a href=\"#nlbnetwork-load-balancer\">NLB(Network Load Balancer)</a></li>\n<li><a href=\"#elbelastic-load-balancer\">ELB(Elastic Load Balancer)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%94%B0%EB%9D%BC%EC%84%9C\">따라서..</a></p>\n</li>\n</ul>\n</div>","excerpt":"들어가기에 앞서 최근에 BOAZ 동아리에서 Oauto2와 goole calender를 이용해서 웹 서비스를 만드는 프로젝트를 진행하는데(계획에 전혀없던 리액트까지 써보는중🥲) 전반적인 인프라 구성을 내가 맡았다. 이때, 도메인을 AWS EC2에 등록하는 과정에서 로드밸런서를 사용하게 되었다. ALB 로드 밸런서에 SSL 인증을 적용하면 각 Ec2 인스턴스 마다 SSL을 처리하지 않아도 HTTPS 트래픽을 처리할 수 있기에 반드시 필요한 부분이었다. 그 과정에서 로드 밸런서를 단순히 “그냥 부하분산 아님?”으로 알고 있던 나에게 개념정리가 꼭 필요한 부분이라 이번 글을 작성하게 되었다. 그럼 시작해보자\n시작해보자 Core 기본적으로 로드밸런서는 Scale out에서 사용된다. 서비스는 성장하는데 늘어나는 트래픽을 서버가 감당할 수 없을때 서버를 증설하는데 이 과정에서 각 서버에 걸리는 부하를 고르게 나누기 위해서는 로드밸런싱이 필수적으로 동반되어야 한다. 즉 다양한 곳에서 들어오는 …","frontmatter":{"date":"September 08, 2024","title":"Load Balancer란? Feat. AWS","categories":"Data_Engineering Cloud","author":"최지혁","emoji":"🛠️"},"fields":{"slug":"/Cloud/Loadbalancer/"}},"next":{"id":"a14666bd-b475-5985-9bcc-462ee1457782","html":"<h2 id=\"들어가기에-앞서\" style=\"position:relative;\"><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C\" aria-label=\"들어가기에 앞서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들어가기에 앞서</h2>\n<p>kafka 토픽관리나 메모리 관리 그리고 SPARK 메모리나 yarn 그리고 프로케테우스와 그라파나 등이 잘 작동하는지 모두 cli로 관리하는것은 명백한 한계가 존재한다. 너무 불편하고 그게 다 시간 자원 빼먹는거다. 때문에 Web ui로 관리하는 것이 보통 굉장히 편한데 사용하는 리소스와 툴이 늘어나는 만큼 많은 Web ui를 띄워야 한다.</p>\n<p>그동안 나는 포트 포워딩으로 모든 ui를 띄웠다. 이렇게 됐을 경우 단점은 <font color=\"#c00000\">인스턴스를 끄고 킬때마다 매번 포트포워딩을 수동으로 해주어야 한다는 것이다.</font>그동안은 한번에 포트 포워딩을 해주는 .sh파일을 길게 만들어서 해결해왔으나 점점 감당하기 어려운 수준까지 갔다. 때문에 도입한 것이 바로 우리 팀원 로컬 내부의 hosts에 ip주소와 도메인 이름을 지정해두고 nginx로 ui를 띄울 수 있도록 설정해두는 방향이었다.</p>\n<div align=\"center\">\n    <img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21211&amp;authkey=%21AInaQqp_g1hhKd0&amp;width=564&amp;height=311\" alt=\"시작해보자\">\n</div>\n<h2 id=\"nginx-설정\" style=\"position:relative;\"><a href=\"#nginx-%EC%84%A4%EC%A0%95\" aria-label=\"nginx 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nginx 설정</h2>\n<h3 id=\"public-nat에-nginx-설치하여-http-rewrite할-수-있도록-설정\" style=\"position:relative;\"><a href=\"#public-nat%EC%97%90-nginx-%EC%84%A4%EC%B9%98%ED%95%98%EC%97%AC-http-rewrite%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8F%84%EB%A1%9D-%EC%84%A4%EC%A0%95\" aria-label=\"public nat에 nginx 설치하여 http rewrite할 수 있도록 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>public-nat에 nginx 설치하여 http rewrite할 수 있도록 설정</h3>\n<p>먼저 nginx를 public-nat에 설치해 주고 nginx.conf를 관리자 권한으로 수정해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ec2-user$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> nginx\nec2-user$ <span class=\"token builtin class-name\">cd</span> /etc/nginx\nec2-user$ <span class=\"token function\">sudo</span> <span class=\"token function\">vi</span> nginx.conf</code></pre></div>\n<p>그 후 include 바로 아래 server 블록 기존 내용 삭제 후 아래 resolver와 server 블록 삽입하면 된다. 간편함을 위해 우선 kafka web ui만 들고왔다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token comment\"># include /etc/nginx/conf.d/*.conf; &lt;- 요 아래에 작성</span>\n\n    resolver <span class=\"token number\">127.0</span>.0.1<span class=\"token punctuation\">;</span>\n \t\tserver <span class=\"token punctuation\">{</span>\n        listen <span class=\"token number\">8080</span><span class=\"token punctuation\">;</span>\n        server_name kafka03<span class=\"token punctuation\">;</span>\n        location / <span class=\"token punctuation\">{</span>\n            proxy_pass http://<span class=\"token operator\">&lt;</span>private IP address<span class=\"token operator\">></span>:<span class=\"token operator\">&lt;</span>port<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\"># 실제 백엔드 주소로 변경</span>\n            proxy_set_header Host <span class=\"token variable\">$http_host</span><span class=\"token punctuation\">;</span>\n            proxy_set_header X-Real-IP <span class=\"token variable\">$remote_addr</span><span class=\"token punctuation\">;</span>\n            proxy_set_header X-Forwarded-For <span class=\"token variable\">$proxy_add_x_forwarded_for</span><span class=\"token punctuation\">;</span>\n            proxy_set_header X-Forwarded-Proto <span class=\"token variable\">$scheme</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 양식으로 모든 포트를 다 지정해 주면 된다. 지금 위 양식으로 conf에 지정하면 server_name에 지정한 이름이 바로 도메인 이름이다. 나중에 로컬에도 적용해줄 예정이니 잘 기억해주자.</p>\n<h2 id=\"nginx-서비스-시작\" style=\"position:relative;\"><a href=\"#nginx-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%8B%9C%EC%9E%91\" aria-label=\"nginx 서비스 시작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nginx 서비스 시작</h2>\n<h3 id=\"nginxconf-작성-완료되면-nginx-서비스-시작\" style=\"position:relative;\"><a href=\"#nginxconf-%EC%9E%91%EC%84%B1-%EC%99%84%EB%A3%8C%EB%90%98%EB%A9%B4-nginx-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%8B%9C%EC%9E%91\" aria-label=\"nginxconf 작성 완료되면 nginx 서비스 시작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nginx.conf 작성 완료되면 nginx 서비스 시작</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ec2-user$ <span class=\"token function\">sudo</span> systemctl start nginx\nec2-user$ <span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> nginx</code></pre></div>\n<h3 id=\"로컬의-etchosts-를-이용하여-resolve-하도록-추가-패키지-설치\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EC%BB%AC%EC%9D%98-etchosts-%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-resolve-%ED%95%98%EB%8F%84%EB%A1%9D-%EC%B6%94%EA%B0%80-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98\" aria-label=\"로컬의 etchosts 를 이용하여 resolve 하도록 추가 패키지 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로컬의 /etc/hosts 를 이용하여 resolve 하도록 추가 패키지 설치</h3>\n<p>다음은 필요한 패키지를 하나 더 설치해 줄거다. <code class=\"language-text\">dnsmasq</code>라는 건데 경량 DNS 포워더 및 DHCP 서버다. 이걸로 로컬 호스트 파일(/etc/hosts)을 사용하여 도메인 이름을 IP 주소로 변환할 수 있다. 우리는 로컬에서 접속할 것이기 때문에 ip주솔르 변환해주는 핵심 패키지이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ec2-user$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> dnsmasq\nec2-user$ <span class=\"token function\">sudo</span> systemctl start dnsmasq\nec2-user$ <span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> dnsmasq</code></pre></div>\n<h3 id=\"서버-방화벽해제-및-영구저장\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84-%EB%B0%A9%ED%99%94%EB%B2%BD%ED%95%B4%EC%A0%9C-%EB%B0%8F-%EC%98%81%EA%B5%AC%EC%A0%80%EC%9E%A5\" aria-label=\"서버 방화벽해제 및 영구저장 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버 방화벽해제 및 영구저장</h3>\n<p>방화벽을 해제해주고</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ec2-user$ <span class=\"token function\">sudo</span> iptables –F\nec2-user$ <span class=\"token function\">sudo</span> <span class=\"token function\">service</span> iptables save</code></pre></div>\n<h2 id=\"로컬의-hosts-파일-수정\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EC%BB%AC%EC%9D%98-hosts-%ED%8C%8C%EC%9D%BC-%EC%88%98%EC%A0%95\" aria-label=\"로컬의 hosts 파일 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로컬의 hosts 파일 수정</h2>\n<h3 id=\"로컬-환경의-hosts-파일에-호스트-등록\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EC%BB%AC-%ED%99%98%EA%B2%BD%EC%9D%98-hosts-%ED%8C%8C%EC%9D%BC%EC%97%90-%ED%98%B8%EC%8A%A4%ED%8A%B8-%EB%93%B1%EB%A1%9D\" aria-label=\"로컬 환경의 hosts 파일에 호스트 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로컬 환경의 hosts 파일에 호스트 등록</h3>\n<p>/etc/hosts 파일에 아래 public-nat에 할당된 Elastic IP 확인 후 바로 입력해주도록 한다.\n본인 로컬의 /etc/hosts 밑에 아래처럼 적용해준다. 이름은 아까 nginx.conf에서 설정했던 server_name임을 잊지말자</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span>Elastic IP<span class=\"token punctuation\">}</span> kafka01 <span class=\"token comment\"># Elastic IP &lt;- public NAT IP</span>\n<span class=\"token punctuation\">{</span>Elastic IP<span class=\"token punctuation\">}</span> kafka02\n<span class=\"token punctuation\">{</span>Elastic IP<span class=\"token punctuation\">}</span> kafka03</code></pre></div>\n<h2 id=\"확인\" style=\"position:relative;\"><a href=\"#%ED%99%95%EC%9D%B8\" aria-label=\"확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>확인</h2>\n<p>그러면! 짠! 굳이 public nat의 ip 주소와 포트포워딩을 이용하지 않아도 이제는 언제든지 서버를 키면 설정해둔 도메인 이름으로 원하는 webui에 접속이 가능하다.</p>\n<div align=\"center\">\n    <img src=\"https://1drv.ms/i/c/9ded56be8cf81c92/IQNF77uX7iyER6tUXEZYC-EMAV7SE2amV7b9rzz7SGpVVKM?width=1024\" alt=\"kafka_web_ui\">\n</div>","frontmatter":{"date":"August 18, 2024","title":"nginx로 Spark, Yarn, kafka 등 리소스 관리 Web ui 구성하기","categories":"Data_Engineering","author":"최지혁","emoji":"🏓"},"fields":{"slug":"/Data Engineering/nginx로 Spark, Yarn, kafkaui 구성하기/"}},"prev":{"id":"1b236385-e4ce-5aeb-a6f2-a699e5da094d","html":"<h2 id=\"드디어-글또-10기를-시작하게-되었다\" style=\"position:relative;\"><a href=\"#%EB%93%9C%EB%94%94%EC%96%B4-%EA%B8%80%EB%98%90-10%EA%B8%B0%EB%A5%BC-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B2%8C-%EB%90%98%EC%97%88%EB%8B%A4\" aria-label=\"드디어 글또 10기를 시작하게 되었다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>드디어 글또 10기를 시작하게 되었다.</h2>\n<p>드이어 글또 10기를 시작하게 되었습니다!!! 이번에 글또 10기를 시작하게 되어서 너무 감사하다. 이렇게 좋은 습관과 네트워킹을 만들 수 있게 해주신 변성윤님께도 감사하고 알맞은 시기에 또 글또 10기 모집 글을 다시 한번 확인한 스스로에게도 감사하다. 전체적으로 글또 10기를 위해서 다짐한 사항이 몇가지 있다. 그러기 위해서는 나의 9기 활동으로 가봐야 한다.</p>\n<p>잠깐 그전에!! 아직 글또가 뭔지 모르신다구요? 아래 이미지를 눌러주세요 총총..</p>\n<p><a href=\"https://geultto.github.io/\"><img src=\"https://1drv.ms/i/c/9ded56be8cf81c92/IQQBDtYAucvMR6nOl5cwNcOsAZgj4-YikFsbjJNsENGA7Ag?width=256&#x26;height=252\" alt=\"글또 docs\"></a></p>\n<h2 id=\"a-few-months-ago\" style=\"position:relative;\"><a href=\"#a-few-months-ago\" aria-label=\"a few months ago permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A few months ago…</h2>\n<p>내가 다짐했다는 것은 9기에서 느낀 아쉬운 부분이 있었다는 것이다. 9기보다 이런 부분에서는 더 나아져야겠다 라는 생각을 글로 풀어보고자 한다.</p>\n<h3 id=\"1-경험한-사실-보다는-생각과-느낀점에-대한-글을-쓰기\" style=\"position:relative;\"><a href=\"#1-%EA%B2%BD%ED%97%98%ED%95%9C-%EC%82%AC%EC%8B%A4-%EB%B3%B4%EB%8B%A4%EB%8A%94-%EC%83%9D%EA%B0%81%EA%B3%BC-%EB%8A%90%EB%82%80%EC%A0%90%EC%97%90-%EB%8C%80%ED%95%9C-%EA%B8%80%EC%9D%84-%EC%93%B0%EA%B8%B0\" aria-label=\"1 경험한 사실 보다는 생각과 느낀점에 대한 글을 쓰기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 경험한 사실 보다는 생각과 느낀점에 대한 글을 쓰기</h3>\n<p>“이게 무슨 소리인교..?” 할 수 있지만 내가 쓴 글을 돌아보면 항상 내가 경험한 사실에 대해서 썼을 뿐, 그래서 내가 이걸 경험하면서 느낀 어려움과 깨달음은 뭔지에 대해서 안 적은 글이 태반이다.</p>\n<p>이부분에서 좀 많은 아쉬움을 느꼈다. 글또 10기에서는 단순히 내가 학습한 것, 그리고 그저 남들이 따라하기 좋은 글이 아닌 내가 경험하고 느낀것을 중심으로 글을 작성해야겠다는 생각이 들었다.</p>\n<p>어차피 남들 따라하기 좋은거, 내가 학습한거 정리 해봤자 그건 시간이 지날수록 레거시 될뿐이지만 <font color=\"#c00000\">내가 깨달은건 평생간다.</font></p>\n<h3 id=\"2-글을-쓰는-과정에-대한-습관-만들기\" style=\"position:relative;\"><a href=\"#2-%EA%B8%80%EC%9D%84-%EC%93%B0%EB%8A%94-%EA%B3%BC%EC%A0%95%EC%97%90-%EB%8C%80%ED%95%9C-%EC%8A%B5%EA%B4%80-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"2 글을 쓰는 과정에 대한 습관 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 글을 쓰는 과정에 대한 습관 만들기</h3>\n<p>글을 쓰는 습관 자체는 형성되었으나 글을 쓰는 과정에 대한 습관은 생성되지 않았다. 9기 시절에는 글을 쓸거야!! 라고 마음 먹었지만 여러 일이 겹치고 글을 쓰는 일은 점점 뒤로 미뤄지더니 막바지가 다괴어서야 글을 쓴 경우가 많았다. 이번에는 단순히 때가 되서 글을 쓰는 것이 아닌 ‘개요작성 -> 초고작성 -> ai 검토 -> 최종 작성->게제’등의 절차를 따르는 습관을 만들고 싶다. 일단 지금 작성하고 있는 글은 성공적인 듯 하다.</p>\n<h3 id=\"3-나와-비슷한-환경의-개발자와-네트워킹\" style=\"position:relative;\"><a href=\"#3-%EB%82%98%EC%99%80-%EB%B9%84%EC%8A%B7%ED%95%9C-%ED%99%98%EA%B2%BD%EC%9D%98-%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%99%80-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%82%B9\" aria-label=\"3 나와 비슷한 환경의 개발자와 네트워킹 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 나와 비슷한 환경의 개발자와 네트워킹</h3>\n<p>9기 때는 커피쳇을 4번 정도 했다. 하지만 전부 주니어 개발자와의 커피챗이었을 뿐 현재 취준생인 사람과의 커피챗을 통한 경험 공유는 하지 않았다. 때문에 나는 주니어 개발자도 아닌데 주니어 개발자의 고민을 많이 알게 되었다. 물론 도움이 안되었던 건 아니지만 결국 현재의 나에게는 큰 도움이 되지는 않았다. 대부분 주니어 개발자 특히 3년차에 들어가신 분들이 커리어 방향을 두고 큰 고민을 하고 계셨다. 일단 나는 커리어를 시작해야 하는 신생아의 입장이기 때문에 나와 비슷하게 이제 졸업을 앞둔 분과 함께 커피챗을 꾸준히 진행해보고자 한다.</p>\n<h3 id=\"4-남들-글-많이-읽고-댓글-달아보기\" style=\"position:relative;\"><a href=\"#4-%EB%82%A8%EB%93%A4-%EA%B8%80-%EB%A7%8E%EC%9D%B4-%EC%9D%BD%EA%B3%A0-%EB%8C%93%EA%B8%80-%EB%8B%AC%EC%95%84%EB%B3%B4%EA%B8%B0\" aria-label=\"4 남들 글 많이 읽고 댓글 달아보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 남들 글 많이 읽고 댓글 달아보기</h3>\n<p>9기때는 초반에는 글을 좀 일었던 것 같았지만 한 7회차 쯤 되니 다른 사람들의 글을 읽는 것에 많이 소홀해졌다. 이번에는 다른 사람들 글을 일고 댓글도 달고 다른사람들로부터 글을 쓰는 방법이나 내용도 공유 받으려고 한다. 어떻게 보면 그사람이 경험한 것을 나는 딸깍 한 번으로 공유 받을 수 있는 건데 내가 너무 남들의 글을 쉽게 생각한것도 있고 이러한 글들이 얼마나 소중한지에 대한 마음이 결여되어 있던것 같다.</p>\n<h3 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h3 id=\"마무리-하며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC-%ED%95%98%EB%A9%B0\" aria-label=\"마무리 하며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리 하며</h3>\n<p>이렇게 10기 때 나의 목표 및 다짐에 대해서 어느정도 글로 풀어보았다. 이제 시작일텐데 마지막 글을 작성하는 그 순간에는 이 다짐들을 다 이룬 상태에서 기분 좋게 회고 글을 쓰는 나 자신을 바라보고자 한다.</p>","frontmatter":{"date":"October 13, 2024","title":"글또 10기를 시작하며","categories":"기타","author":"최지혁","emoji":"📝"},"fields":{"slug":"/Data Engineering/글또 10기를 들어가며/"}},"site":{"siteMetadata":{"siteUrl":"https://statisticsfox.github.io","comments":{"utterances":{"repo":"StatisticsFox/blog-comments"}}}}},"pageContext":{"slug":"/Cloud/Loadbalancer/","nextSlug":"/Data Engineering/nginx로 Spark, Yarn, kafkaui 구성하기/","prevSlug":"/Data Engineering/글또 10기를 들어가며/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}