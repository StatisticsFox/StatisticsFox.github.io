{"componentChunkName":"component---src-templates-blog-template-js","path":"/Cloud/","result":{"data":{"cur":{"id":"ad2b72e4-7395-5707-be63-0e9e2ee54d97","html":"<h1 id=\"nat-인프라\" style=\"position:relative;\"><a href=\"#nat-%EC%9D%B8%ED%94%84%EB%9D%BC\" aria-label=\"nat 인프라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NAT 인프라</h1>\n<p>이번에 실시간 따릉이 대시보드 제작 프로젝트에 데이터 엔지니어 및 인프라로 참여하게 되었다.\n협업 및 배포의 용이성 때문에 클라우드를 이용하기로 결정이 났고 <font color=\"#c00000\">AWS에 EC2에 카프카 클러스터를 구축</font>하고 프로듀서를 개발하기로 하였다.<br>\n<br/></p>\n<p>AWS를 이용한 협업은 처음이기에 세세하게 사전조사를 했는데 첫째로 알게 된 사실은 AWS에서 네트워크를 설계할때 NAT의 사용은 필수적이라는 것이다.<br>\n<br/></p>\n<p>보안상 카프카 클러스터 서버들을 외부에서 접근할 수 없게 해야하기 때문이다.<br>\n<br/></p>\n<p>때문에 VPC 인프라를 구축할때 Public 서브넷과 Private 서브넷을 만들어 그안에 EC2 인스턴스를 두고, Bastion Host를 통해 Public 서브넷에서 Priavate 서브넷으로 접속한 후, NAT Gateway를 통해서 외부 인터넷 소스를 사설망에서 받는 식으로 운용된다.<br>\n<br/></p>\n<p>그만큼 중요한 것으로 당연히 AWS에도 관련 서비스인 NAT Gateway가 존재하고 그것을 이용해서 손쉽게 사설망 외부 통신을 하지만, 아주 중요한 사실이 있었으니…<br>\n<br/></p>\n<p>NAT 게이트웨이는 서울 지역 기준으로 시간당 0.059달러의 비용이 발생하는데, 이걸 24시간 가동하고 있으면 강제로 물린 삼성전자 주식을 다 팔아야할 수도 있다.<br>\n<br/></p>\n<p>때문에 NAT Gateway가 아닌 NAT instance를 사용할 수 있는데 물론 단점이 명확하지만 프리티어 요금제를 사용하면 <font color=\"#c00000\">무료</font>로도 사용가능하다.(무료가 포인트다^^)<br>\n<br/></p>\n<p>학생들이서 하는 토이 프로젝트이므로 퍼블릭 서브넷 기능 하나만 있으면 되기에 묻지도 따지지도 않고 NAT instance를 사용하기로 하였다.</p>\n<h1 id=\"nat-인스턴스-vs-gateway\" style=\"position:relative;\"><a href=\"#nat-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-vs-gateway\" aria-label=\"nat 인스턴스 vs gateway permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NAT 인스턴스 vs Gateway</h1>\n<p>NAT Instance는 EC2 Instance를 NAT용으로 바꿔 사용하는 것을 말한다.</p>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21175&#x26;authkey=%21ACJyVPKOV4xFRFw&#x26;width=1826&#x26;height=1018\" alt=\"사진\">\n위 인프라는 이번에 내가 구성한 AWS 구성도다.\n인프라 구성을 보면, Public subnet에 NAT instance가 위치하게 된다. 그리고 <strong>EIP</strong>를 부여 받아 외부의 트래픽을 받는다.<br>\n<br/></p>\n<p>또한, Private 서브넷의 route table에 <strong>nat-instance-id</strong>를 설정하고 public-nat의 보안 그룹을 수정하여 private 서브넷에서 오는 모든 TCP 요청과 ICMP을 받도록 설정한다.<br>\n<br/></p>\n<blockquote>\n<p>EIP란?\n인스턴스를 재시작해도 public IP가 변경되지 않도록 고정된 public IP를 제공하는 서비스를 말함.</p>\n</blockquote>\n<br/>\n✅<font color=\"#c00000\">**NAT Instance**</font>: 퍼블릭 서브넷 기능이 있는 하나의 EC2 서버다. 때문에 꺼지면 죽으며 위 구성도 처럼 단일 서버로 구축하기 때문에 SPOF가 될 수 있다. 토이 프로젝트에서만 사용하도록 하자ㅎㅎ\n<p>✅<font color=\"#c00000\"><strong>NAT Gateway</strong></font>: AWS에서 제공하는 서비스이기에 고가용성이 보장되서 죽지 않는다. SPOF라는 단점을 해결할 수 있다.<br>\n<br/></p>\n<table>\n<thead>\n<tr>\n<th><strong>NAT Instance</strong></th>\n<th><strong>NAT Gateway</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>단일 인스턴스</td>\n<td>AWS에서 제공하는 서비스</td>\n</tr>\n<tr>\n<td>= EC2</td>\n<td>= 서비스</td>\n</tr>\n<tr>\n<td>서버가 꺼지면 죽음</td>\n<td>꺼져도 죽지 않음 병렬로 구성(고가용성 보장)</td>\n</tr>\n<tr>\n<td>보안그룹에 영향을 받기에 일일이 설정해야 함</td>\n<td>보안 그룹 영향 받지 않음</td>\n</tr>\n<tr>\n<td>Bastion을 겸할 수O</td>\n<td>Bastion을 겸할 수X</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<h1 id=\"nat-instance를-구성-방법\" style=\"position:relative;\"><a href=\"#nat-instance%EB%A5%BC-%EA%B5%AC%EC%84%B1-%EB%B0%A9%EB%B2%95\" aria-label=\"nat instance를 구성 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NAT INSTANCE를 구성 방법</h1>\n<h4 id=\"서울리전-확인하기\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EC%9A%B8%EB%A6%AC%EC%A0%84-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0\" aria-label=\"서울리전 확인하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서울리전 확인하기</h4>\n<ol>\n<li>서울리전으로 설정하기 않을경우 NW 트래픽 문제나 속도 이슈가 존재하므로 반드시 서울리전으로 설정한다.</li>\n</ol>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21180&#x26;authkey=%21APvwedKCHFgQ6Kw&#x26;width=1630&#x26;height=1224\" alt=\"사진\"></p>\n<h4 id=\"ec2-생성\" style=\"position:relative;\"><a href=\"#ec2-%EC%83%9D%EC%84%B1\" aria-label=\"ec2 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EC2 생성</h4>\n<ol>\n<li>본격적으로 EC2를 생성해보자 애플리케이션은 일반 Linux 그리고 AMI는 기본으로 설정해주었다.</li>\n</ol>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21178&#x26;authkey=%21AKRzq5kdXgvkcic&#x26;width=1606&#x26;height=1390\" alt=\"사진\">\n<br/>\n2. 서브넷 기능만 있으면 되기에 인스턴스 유형은 부분 무료인 t2.micro로 설정해준다.</p>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21181&#x26;authkey=%21AKxVZWn1CiOmH5o&#x26;width=1588&#x26;height=460\" alt=\"사진\">\n<br/>\n3. 키페어를 pem파일로 만들어준다.</p>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21182&#x26;authkey=%21APgiOuyNKz-W50M&#x26;width=408&#x26;height=394\" alt=\"사진\">\n<br/>\n4. vpc 설정해준다.</p>\n<ul>\n<li>기본 vpc</li>\n<li>나의 경우 bcd 서브넷에 카프카 브로커를 할당했으므로 a에 NAT을 할당해준다.</li>\n</ul>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21183&#x26;authkey=%21AGgbEYqNyIHczdo&#x26;width=1598&#x26;height=1156\" alt=\"사진\">\n<br/>\n5. 인바운드 규칙 설정</p>\n<ul>\n<li>인바운드 규칙은 내 IP를 할당한다.</li>\n</ul>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21184&#x26;authkey=%21AH8QcDiiKDJCK4c&#x26;width=1582&#x26;height=552\" alt=\"사진\"></p>\n<h4 id=\"eip-할당\" style=\"position:relative;\"><a href=\"#eip-%ED%95%A0%EB%8B%B9\" aria-label=\"eip 할당 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EIP 할당</h4>\n<ol>\n<li>VPC 접속</li>\n</ol>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21186&#x26;authkey=%21AKPEtJmL7a-EvMQ&#x26;width=1828&#x26;height=788\" alt=\"사진\"></p>\n<ol start=\"2\">\n<li>탄력적 IP로 이동</li>\n</ol>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21185&#x26;authkey=%21AO8AgBJvSrgK1QE&#x26;width=468&#x26;height=866\" alt=\"사진\"></p>\n<ol start=\"3\">\n<li>탄력적 IP 생성</li>\n</ol>\n<ul>\n<li>설정 따로 필요 없고 기본으로 생성한다.</li>\n</ul>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21187&#x26;authkey=%21AAr_8clA47VSufc&#x26;width=1608&#x26;height=1454\" alt=\"사진\"></p>\n<ol start=\"4\">\n<li>탄력적 주소 IP 연결</li>\n</ol>\n<ul>\n<li>4개의 인스턴스 중 publc-NAT EC2와 연결한다.</li>\n<li>퍼블릭 NAT의 private IP주소를 연결한다.</li>\n</ul>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21188&#x26;authkey=%21AO2xww8Kgkg1rMo&#x26;width=1550&#x26;height=1250\" alt=\"사진\">\n<img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21189&#x26;authkey=%21AHnhNMasptV-XKk&#x26;width=1456&#x26;height=466\" alt=\"사진\"></p>\n<h1 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h1>\n<p>이렇게 하면 간단하게 NAT 인스터스 생성이 가능하다. 이제 이 퍼블릭 서버 내부에 프라이빗 서 버 key 값을 scp 명령어로 집어 넣고 본격적으로 카프카 클러스터를 구축이 가능하다.</p>","excerpt":"NAT 인프라 이번에 실시간 따릉이 대시보드 제작 프로젝트에 데이터 엔지니어 및 인프라로 참여하게 되었다.\n협업 및 배포의 용이성 때문에 클라우드를 이용하기로 결정이 났고 AWS에 EC2에 카프카 클러스터를 구축하고 프로듀서를 개발하기로 하였다.  AWS를 이용한 협업은 처음이기에 세세하게 사전조사를 했는데 첫째로 알게 된 사실은 AWS에서 네트워크를 설계할때 NAT의 사용은 필수적이라는 것이다.  보안상 카프카 클러스터 서버들을 외부에서 접근할 수 없게 해야하기 때문이다.  때문에 VPC 인프라를 구축할때 Public 서브넷과 Private 서브넷을 만들어 그안에 EC2 인스턴스를 두고, Bastion Host를 통해 Public 서브넷에서 Priavate 서브넷으로 접속한 후, NAT Gateway를 통해서 외부 인터넷 소스를 사설망에서 받는 식으로 운용된다.  그만큼 중요한 것으로 당연히 AWS에도 관련 서비스인 NAT Gateway가 존재하고 그것을 이용해서 손쉽게 사설망 …","frontmatter":{"date":"April 14, 2024","title":"AWS NAT instance를 활용한 비용절약","categories":"Cloud","author":"최지혁","emoji":"🐕"},"fields":{"slug":"/Cloud/"}},"next":{"id":"10c10b8e-1dd3-52c2-aad6-143b3a048b6c","html":"<h2 id=\"데이터-파이프라인-최적화의-필요성\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8-%EC%B5%9C%EC%A0%81%ED%99%94%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1\" aria-label=\"데이터 파이프라인 최적화의 필요성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 파이프라인 최적화의 필요성</h2>\n<p>대 빅데이터 시대인 만큼 <strong>데이터 파이프라인을 최적화하는 것</strong>은 굉장히 중요하다. 특히 <strong>MLOps 분야</strong>에서는 훨씬 더 중요하다. 왜냐하면 AI 성능이 기하급수적으로 발전하면서 그만큼 추론속도나 학습 속도 또한 굉장히 중요해지고 있기 때문이다.\n<img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21172&#x26;authkey=%21AMLVmAUUwVh49k4&#x26;width=1568&#x26;height=468\" alt=\"사진\"></p>\n<h2 id=\"보편적인-최적화-방안이-존재할까\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%ED%8E%B8%EC%A0%81%EC%9D%B8-%EC%B5%9C%EC%A0%81%ED%99%94-%EB%B0%A9%EC%95%88%EC%9D%B4-%EC%A1%B4%EC%9E%AC%ED%95%A0%EA%B9%8C\" aria-label=\"보편적인 최적화 방안이 존재할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보편적인 최적화 방안이 존재할까?</h2>\n<p>그렇다면 데이터 파이프라인을 최적화하는 보편적인 정답이 존재할까? 내 대답은 <strong>No</strong>!다. 구축하는 파이프라인마다 도메인과 요구사항들이 모두 다르기 때문에 보편적인 요구사항이란 존재할 수 없다.\n<img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21164&#x26;authkey=%21AN1DKoWFA8cD0Yg&#x26;width=1246&#x26;height=424\" alt=\"사진\"></p>\n<h2 id=\"보편적인-컴포넌트는-존재할까\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%ED%8E%B8%EC%A0%81%EC%9D%B8-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%8A%94-%EC%A1%B4%EC%9E%AC%ED%95%A0%EA%B9%8C\" aria-label=\"보편적인 컴포넌트는 존재할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보편적인 컴포넌트는 존재할까?</h2>\n<p>그렇다면 보편적인 컴포넌트는 중요할까? 내 대답은 <strong>Yes</strong>다. 보편적인 컴포넌트는 존재한다. 바로 <strong>DataLake</strong>다.\n데이터 파이프라인은 “수집 -> 적재 -> 처리 -> 활용”의 단계를 거치는데 이때 적재 부분에서 실제 데이터를 운영용으로쓰는 경우에는 Datalake를 사용할 수밖에 없다. 따라서 <strong>datalake를 최적화 하는것이 결국 데이터 파이프라인을 최적화 하는것과 다름없다고 생각한다.</strong>\n<img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21166&#x26;authkey=%21AIeFHkvVBN7IT1w&#x26;width=1024&#x26;height=270\" alt=\"사진\"></p>\n<h2 id=\"datalake를-최적화-해보자\" style=\"position:relative;\"><a href=\"#datalake%EB%A5%BC-%EC%B5%9C%EC%A0%81%ED%99%94-%ED%95%B4%EB%B3%B4%EC%9E%90\" aria-label=\"datalake를 최적화 해보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DataLake를 최적화 해보자</h2>\n<blockquote>\n<p>Data Lake를 최적화하다니? DataLake는 이미 나와 있는 제품 아닌가?</p>\n</blockquote>\n<p>라고할 수 도 있다. 어느정도는 맞는 말이며 마찬가지로 제품 또한 요구사항에 따라 바뀐다. 비용 최적화에 대한 니즈가 높은 경우 데이터 중요도 마다 클래스를 다르게 하여 비용을 더 저렴하게 지불 가능한 S3를 이용할 수 있고, 사용하는 툴에 따라서 호환성에 맞는 gcp나 azure또한 선택 가능하다. 따라서 이번에 할얘기는 Data Format에 관한 이야기다.</p>\n<h2 id=\"csv-vs-parquet\" style=\"position:relative;\"><a href=\"#csv-vs-parquet\" aria-label=\"csv vs parquet permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSV vs Parquet</h2>\n<p>오늘은 두가지 데이터 포맷을 비교해 볼 것이다. 바로 <strong>parquet</strong>과 <strong>csv</strong> 파일을 비교해 보고자 한다. 나는 통계학과에 재학 당시(사실 지금도 재학 중..) 대부분의 데이터를 이용할때 CSV 형태의 파일을 이용하였다. 왜냐하면 공공데이터나 데이콘 혹은 인터넷에서 주로 배포된 데이터의 경우 대부분 CSV 파일로 배포가 되었기 때문이다. 지금에서야 이유를 생각해보면 CSV가 아무래도 <strong>마이크로소프트 엑셀로 쉽게 확인이 가능하고 훨씬 친숙</strong>하기 때문에 대부분 csv 파일로 데이터를 배포하는 것 같다.\n<img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21167&#x26;authkey=%21AGSuC2Ee7BHt-n0&#x26;width=1202&#x26;height=380\" alt=\"사진\">\n때문에 나도 parquet 보다는 csv를 주로 이용해봤다. 다만 나는 어떤 실험을 통해 더이상 csv 파일은 왠만해서는 사용하지 않는데 오늘은 이 실험에 대해 소개해 보고자 한다.</p>\n<h2 id=\"csv와-parquet-비교실험\" style=\"position:relative;\"><a href=\"#csv%EC%99%80-parquet-%EB%B9%84%EA%B5%90%EC%8B%A4%ED%97%98\" aria-label=\"csv와 parquet 비교실험 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>csv와 parquet 비교실험</h2>\n<p>먼저 실험 환경은 다음과 같다.</p>\n<ul>\n<li>컴퓨터: Mac m1 Pro</li>\n<li>메모리: Ram 16GB</li>\n<li>대역폭: 100GB/s</li>\n<li>용량: SSD 1TB</li>\n<li>Processor: 8 core CPU</li>\n<li>Remote Storage: AWS S3</li>\n</ul>\n<p>실험 아키텍처는 다음과 같다.</p>\n<p>데이터는 케글의 아마존 <a href=\"https://www.kaggle.com/datasets/muhammedabdulazeem/amazon-electronics-items-reviews\">전자제품 리뷰 데이터</a>를 사용하였다.\n<img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21163&#x26;authkey=%21ACPWuFhmA36B8YA&#x26;width=1192&#x26;height=778\" alt=\"사진\"></p>\n<h3 id=\"size\" style=\"position:relative;\"><a href=\"#size\" aria-label=\"size permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Size</h3>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21174&#x26;authkey=%21AJPPIE-TwZV8B9w&#x26;width=1084&#x26;height=536\" alt=\"사진\">\nparquet 파일이 1.84% 더 작은 것을 확인 가능하다.</p>\n<h3 id=\"download-speed\" style=\"position:relative;\"><a href=\"#download-speed\" aria-label=\"download speed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>download speed</h3>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21168&#x26;authkey=%21AKVclBQI-Im_ZGw&#x26;width=1018&#x26;height=562\" alt=\"사진\">\nparquet 파일이 1.9% 더 빠른 것을 확인할 수 있다.</p>\n<h3 id=\"read-speed\" style=\"position:relative;\"><a href=\"#read-speed\" aria-label=\"read speed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>read speed</h3>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21171&#x26;authkey=%21AB_V5Mbw64lg4dY&#x26;width=1200&#x26;height=368\" alt=\"사진\">\nparquet 파일이 1.78% 더 빠른 것을 확인할 수 있다.</p>\n<h3 id=\"count-speed\" style=\"position:relative;\"><a href=\"#count-speed\" aria-label=\"count speed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>count speed</h3>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21165&#x26;authkey=%21AFupwqOeIrUMUbE&#x26;width=1120&#x26;height=344\" alt=\"사진\">\nparquet 파일이 5.9% 더 빠른 것을 확인할 수 있다.</p>\n<h3 id=\"실험결과\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%ED%97%98%EA%B2%B0%EA%B3%BC\" aria-label=\"실험결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실험결과</h3>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21173&#x26;authkey=%21ABA9dtYq23ToNYo&#x26;width=1740&#x26;height=368\" alt=\"사진\">\n위와 같이 모든 지표가 parquet 파일이 더 좋다고 말해주고 있다. 즉, datalake 관점에서는 csv보다는 parquet파일을 적재하는 것이 훨씬 바람직하다.</p>\n<h2 id=\"parquet-파일이-더-좋은-이유\" style=\"position:relative;\"><a href=\"#parquet-%ED%8C%8C%EC%9D%BC%EC%9D%B4-%EB%8D%94-%EC%A2%8B%EC%9D%80-%EC%9D%B4%EC%9C%A0\" aria-label=\"parquet 파일이 더 좋은 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>parquet 파일이 더 좋은 이유</h2>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21169&#x26;authkey=%21ANjgskNzhHvUJAw&#x26;width=1248&#x26;height=634\" alt=\"사진\">\nparquet 파일은 열 기반과 행기반 스토리지의 장점을 모두 챙긴 hybrid기반의 데이터 포맷이다. 때문에 데이터를 읽어들이거나 인덱싱 할때 단순 행 기반 데이터 포멧인 csv가 가진 단점들을 해결해준다.</p>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21170&#x26;authkey=%21AGrwU-T4bZbWuRU&#x26;width=1394&#x26;height=472\" alt=\"사진\">\n따라서 나는 사이드 프로덱트나 과제시 클라우드에 데이터를 담을 일이 있으면 주로 parquet 데이터를 이용하는 편이다. 물론 <strong>성능에 대한 니즈가 없다거나 담당자가 자주 바뀌어 범용성이 높아야하는 경우에는 csv 파일을 사용</strong>해도 문제가 없지만 그래도 클라우드를 사용하는 입장에서는 <strong>parquet 포멧으로 데이터를 적재하는 것이 바람직하다</strong>고 생각한다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8-%EC%B5%9C%EC%A0%81%ED%99%94%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1\">데이터 파이프라인 최적화의 필요성</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B3%B4%ED%8E%B8%EC%A0%81%EC%9D%B8-%EC%B5%9C%EC%A0%81%ED%99%94-%EB%B0%A9%EC%95%88%EC%9D%B4-%EC%A1%B4%EC%9E%AC%ED%95%A0%EA%B9%8C\">보편적인 최적화 방안이 존재할까?</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B3%B4%ED%8E%B8%EC%A0%81%EC%9D%B8-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%8A%94-%EC%A1%B4%EC%9E%AC%ED%95%A0%EA%B9%8C\">보편적인 컴포넌트는 존재할까?</a></p>\n</li>\n<li>\n<p><a href=\"#datalake%EB%A5%BC-%EC%B5%9C%EC%A0%81%ED%99%94-%ED%95%B4%EB%B3%B4%EC%9E%90\">DataLake를 최적화 해보자</a></p>\n</li>\n<li>\n<p><a href=\"#csv-vs-parquet\">CSV vs Parquet</a></p>\n</li>\n<li>\n<p><a href=\"#csv%EC%99%80-parquet-%EB%B9%84%EA%B5%90%EC%8B%A4%ED%97%98\">csv와 parquet 비교실험</a></p>\n<ul>\n<li><a href=\"#size\">Size</a></li>\n<li><a href=\"#download-speed\">download speed</a></li>\n<li><a href=\"#read-speed\">read speed</a></li>\n<li><a href=\"#count-speed\">count speed</a></li>\n<li><a href=\"#%EC%8B%A4%ED%97%98%EA%B2%B0%EA%B3%BC\">실험결과</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#parquet-%ED%8C%8C%EC%9D%BC%EC%9D%B4-%EB%8D%94-%EC%A2%8B%EC%9D%80-%EC%9D%B4%EC%9C%A0\">parquet 파일이 더 좋은 이유</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"March 17, 2024","title":"DataOptimizations - Speed up your pipeline","categories":"Data_Engineering","author":"최지혁","emoji":"🛠️"},"fields":{"slug":"/Data Engineering/"}},"prev":{"id":"a072a1f4-cdc0-5328-a338-4ba99b967d9e","html":"<h1 id=\"aws---jammy-inrelease--101-network-is-unreachable\" style=\"position:relative;\"><a href=\"#aws---jammy-inrelease--101-network-is-unreachable\" aria-label=\"aws   jammy inrelease  101 network is unreachable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS - jammy InRelease &#x26; 101: Network is unreachable</h1>\n<h2 id=\"jammy-inrelease-오류\" style=\"position:relative;\"><a href=\"#jammy-inrelease-%EC%98%A4%EB%A5%98\" aria-label=\"jammy inrelease 오류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jammy InRelease 오류</h2>\n<p>카프카 브로커 Ubuntu 서버에 java를 설치하려고 하는데 아래와 같은 문구가 뜨면서 동작이 되지 않았다. 무슨 jammy가 inrelease된 것 같은데 재미 하나도 없고 머리 아프다</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Ign: 1 http://ap-northeast-2.ec2.archive.ubuntu.com/ubuntu jammy InRelease\nIgn: 2 http://ap-northeast-2.ec2.archive.ubuntu.com/ubuntu jammy-updates InRelease \nIgn: 3 http://ap-northeast-2.ec2.archive.ubuntu.com/ubuntu jammy-backports\nCannot initiate the connection to ap-northeast-2.ec2.archive.ubuntu.com:80 (2406:da12:944:ae00:128:62c8:e? ). - connect (101: Network is unreachable)</code></pre></div>\n<p>다행히도 해당 에러에 대해서는 AWS측에서 답변 달아준 부분 있다.\n<img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21190&#x26;authkey=%21ADpusYyw3sAPnzs&#x26;width=1232&#x26;height=1038\" alt=\"\"></p>\n<h3 id=\"공식-해결-방법\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EC%8B%9D-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"공식 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공식 해결 방법</h3>\n<p>대충 해석을 보면 아래의 포인트들을 다시 체크해봐라 같은데 해석해보면 다음과 같다.</p>\n<ul>\n<li>현재 EC2가 제대로 작동하는 다른 EC2들과 <font color=\"#c00000\">동일한 VPC 및 서브넷에 배포되었는가</font>?</li>\n<li>그게 아니라면 VPC가 <font color=\"#c00000\">인터넷 게이트웨이로 인터넷에 접근이 허용</font>되어 있는가?</li>\n<li>서브넷이 public이라면 인터넷 바운드 트레픽을 <font color=\"#c00000\">인터넷 게이트 웨이로 라우팅</font><font color=\"#c00000\">하는</font> <font color=\"#c00000\">라우팅 테이블이 있는가</font>?</li>\n<li>서브넷이 private이라면 인터넷 바운드 트래픽을 공용 서브넷의 <font color=\"#c00000\">NAT 게이트 위에이로 라우팅하는 라우팅 테이블이 있는가</font>?</li>\n</ul>\n<h3 id=\"체크리스트\" style=\"position:relative;\"><a href=\"#%EC%B2%B4%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%8A%B8\" aria-label=\"체크리스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>체크리스트</h3>\n<p>첫째로, EC2는 <font color=\"#245bdb\">동일한 VPC에 배포</font>되었으며 각각의 브로커 서브넷은 private로 두기 위해 종류를 다르게 하였다.\n둘째로, 나는 비용절감을 위해<font color=\"#245bdb\"> NAT Instance를 구축</font>했고 public NAT 서버는 라우팅 테이블이 잘 설정되어 있으며 <font color=\"#245bdb\">라우팅 테이블은 3개의 브로커 서브넷을 잘 가리키고 있었다.</font>\n셋째로 브로커 private 서브넷의 <font color=\"#245bdb\">바운드 규칙 또한 public NAT에 잘 뚫어준 것도  확인</font>했다.</p>\n<p>따라서 해당사항은 없다고 생각했다. 때문에 같이 나온 에러인 <font color=\"#c00000\">80번 포트 접속에 대한 101 에러에 대해서 탐색</font>해보기로 했다.</p>\n<h2 id=\"101-network-is-unreachable-오류\" style=\"position:relative;\"><a href=\"#101-network-is-unreachable-%EC%98%A4%EB%A5%98\" aria-label=\"101 network is unreachable 오류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>101: Network is unreachable 오류</h2>\n<p>해당 사항에 대해서는 구글링 및 AWS 답변을 찾아본 결과 80번 포트가 막혀있어서 그렇단다. 때문에 public nat의 인바운드와 아웃바운드 규칙을 잠시 모든 TCP에 대하여 허용해주었다.\n하지만 여전히 같은 에러가 났다…</p>\n<h1 id=\"오류-해결-방법\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%A5%98-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"오류 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오류 해결 방법</h1>\n<h2 id=\"iptable-설정하기\" style=\"position:relative;\"><a href=\"#iptable-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"iptable 설정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IPtable 설정하기</h2>\n<p>이렇게 허무할 수가, 알고보니 iptable 설정이 잘 못 되어 있었다… 인프라 설정 덕분에 3시간이 날아가 버렸다..</p>\n<blockquote>\n<p>iptable이란?\n리눅스에 저장된 네트워크 패킷 필터링 시스템으로 네트워크 트래픽을 관리하여 패킷을 허용하거나 차단할 수 있다.</p>\n</blockquote>\n<p>아래처럼 iptable을 설치해주면 이제 인터넷 연결이 될 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> iptables-services <span class=\"token parameter variable\">-y</span>\n$ <span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> iptables\n$ <span class=\"token function\">sudo</span> systemctl start iptables\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">vi</span> /etc/sysctl.d/custom-ip-forwarding.conf\n<span class=\"token assign-left variable\">net.ipv4.ip_forward</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">sysctl</span> <span class=\"token parameter variable\">-p</span> /etc/sysctl.d/custom-ip-forwarding.conf\n$ <span class=\"token function\">sudo</span> /sbin/iptables <span class=\"token parameter variable\">-t</span> nat <span class=\"token parameter variable\">-A</span> POSTROUTING <span class=\"token parameter variable\">-o</span> enXO <span class=\"token parameter variable\">-j</span> MASQUERADE\n$ <span class=\"token function\">sudo</span> /sbin/iptables <span class=\"token parameter variable\">-F</span> FORWARD\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">service</span> iptables</code></pre></div>\n<h1 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h1>\n<p>AWS는 삽질을 통한 깨달음을 얻어야 한다!! 해결됐을때 그 시원함도 너무 좋다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#jammy-inrelease-%EC%98%A4%EB%A5%98\">jammy InRelease 오류</a></p>\n<ul>\n<li><a href=\"#%EA%B3%B5%EC%8B%9D-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\">공식 해결 방법</a></li>\n<li><a href=\"#%EC%B2%B4%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%8A%B8\">체크리스트</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#101-network-is-unreachable-%EC%98%A4%EB%A5%98\">101: Network is unreachable 오류</a></p>\n</li>\n<li>\n<p><a href=\"#iptable-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\">IPtable 설정하기</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"April 16, 2024","title":"AWS - jammy InRelease & 101 Network is unreachable 해결하기","categories":"ERROR Cloud","author":"최지혁","emoji":"🧰"},"fields":{"slug":"/error/"}},"site":{"siteMetadata":{"siteUrl":"https://statisticsfox.github.io","comments":{"utterances":{"repo":"StatisticsFox/blog-comments"}}}}},"pageContext":{"slug":"/Cloud/","nextSlug":"/Data Engineering/","prevSlug":"/error/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}