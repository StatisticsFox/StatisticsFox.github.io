{"componentChunkName":"component---src-templates-blog-template-js","path":"/Data Engineering/Ddareungi real-time Dashboard architecture/","result":{"data":{"cur":{"id":"e460f12c-078a-55df-b32f-ff41cad6bff4","html":"<h1 id=\"base\" style=\"position:relative;\"><a href=\"#base\" aria-label=\"base permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Base</h1>\n<p>이번에 한이음의 일환으로 클라우드 환경에서 실시간 따릉이 대시보드를 만들게 되었다. 다만 내 역할이 데이터 엔지니어링 및 인프라에 국한되어 있어 개인적으로 오픈소스를 활용하여 로컬에서 하나를 더 만들어 보려고 한다. 때문에 레퍼런스를 찾던 도중 다음과 같은 글을 발견했다.\n<a href=\"https://medium.com/@emergeit/realtime-data-streaming-with-apache-kafka-apache-pinot-apache-druid-and-apache-superset-e67161eb9666\">https://medium.com/@emergeit/realtime-data-streaming-with-apache-kafka-apache-pinot-apache-druid-and-apache-superset-e67161eb9666</a>\n2년이 넘은 자료이기는 하지만 내 요구사항을 모두 만족했기에 아주 적합한 래퍼런스였다.\n그럼 이제 시작해보자\n<img src=\"http://mail.jjal.today/data/file/gallery/1850094941_Ejxzeol4_5fd5695eb972096949f5bbb720d855d72cae8045.jpg\" alt=\"시작해보자\"></p>\n<h2 id=\"ddareungi-real-time-dashboard-architecture\" style=\"position:relative;\"><a href=\"#ddareungi-real-time-dashboard-architecture\" aria-label=\"ddareungi real time dashboard architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ddareungi real-time Dashboard architecture</h2>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21206&#x26;authkey=%21ALbDIYVRTxIVsFE&#x26;width=2400&#x26;height=868\" alt=\"Dashboard architecture\"></p>\n<p>위는 내가 수정한 아키텍처다. 신경 쓴 부분은 아래와 같다.</p>\n<ul>\n<li>Docker는 Superset을 올릴때만 사용하고자 한다.\n<ul>\n<li>레퍼런스에서는 모든 프레임워크를 Docker Labs위에서 실행했는데 <strong>%3Cspan style=“background:#fff88f”%3EDocker Labs는 사용시간 2시간의 제한이 있다</span></strong>… 그리고 굳이 docker가 있는데 Docker Labs를 사용해야 할 필요성을 못느꼈다.(옛날에 학교에서 docker 처음 배웠을때 한번 써봤다.)</li>\n</ul>\n</li>\n<li><strong>Speed Layer는</strong> <font color=\"#c00000\">Druid로 선정</font>하였다.\n<ul>\n<li>사실 성능만 생각하면 <font color=\"#c00000\">대규모 데이터 세트로 갈수록 낮은 레이턴시 쿼리를 제공</font>하는 Apache pinot을 선택하는게 맞다. 하지만 다음과 같은 이유에서 Druid로 선정하였다.</li>\n<li><font color=\"#c00000\">Druid는 지원하는 데이터 소스가 굉장히 많다</font>. Kafka, RabbitMQ, Flink, Samza, Storm, Spark 등 나중을 위해서라도 Druid 좋다고 생각했다.(원래 남들 다쓰는게 좋은 법)\n<ul>\n<li>pinot은 링크드인에 집중되어 개발됐기에<font color=\"#c00000\"> kafka 하나만 지원</font>한다.</li>\n</ul>\n</li>\n<li>따릉이 데이터는 대규모 데이터가 아니다. 때문에<font color=\"#c00000\"> 성능에 대한 니즈가</font> 크게 <font color=\"#c00000\">중요하지 않다.</font></li>\n<li><font color=\"#c00000\">전용 커뮤니티 활성화가 엄청 잘되어 있다. </font>Druid가 더 대중적이기에 오류가 나거나 막히는 부분이 있어도 대비할 수 있다.</li>\n<li>Pinot과 Druid에 대한 비교는 여기에 포스팅할 예정이다. -> 링크 추가예정</li>\n</ul>\n</li>\n<li><font color=\"#c00000\">producer를 새로 개발</font>해야 한다.\n<ul>\n<li>래퍼런스는 fake-user라는 유저를 랜덤으로 생성하는 코드를 작성하였으나  api에 맞추어서 새로운 producer를 개발하고자 한다.</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"core\" style=\"position:relative;\"><a href=\"#core\" aria-label=\"core permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Core</h1>\n<h2 id=\"practice-environment-and-framework-version\" style=\"position:relative;\"><a href=\"#practice-environment-and-framework-version\" aria-label=\"practice environment and framework version permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Practice environment and framework version</h2>\n<p>Practice environment</p>\n<ul>\n<li>Computer: Mac m1 Pro</li>\n<li>Memory: Ram 16GB</li>\n<li>bandwidth: 100GB/s</li>\n<li>SSD capacity: 1TB</li>\n<li>Processor: 8 core CPU</li>\n</ul>\n<p>Framework version</p>\n<ul>\n<li>Apache kafka: 2.7.1</li>\n<li>Apache Druid: 29.0.1</li>\n<li>Apache superset: latest</li>\n</ul>\n<p>Data: <a href=\"https://data.seoul.go.kr/dataList/OA-15493/A/1/datasetView.do\">https://data.seoul.go.kr/dataList/OA-15493/A/1/datasetView.do</a></p>\n<h2 id=\"set-up-kafka-on-local\" style=\"position:relative;\"><a href=\"#set-up-kafka-on-local\" aria-label=\"set up kafka on local permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set up kafka on Local</h2>\n<h3 id=\"install-kafka\" style=\"position:relative;\"><a href=\"#install-kafka\" aria-label=\"install kafka permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>install kafka</h3>\n<p>원하는 버전의 kafka를 다운 받아준다. kraft 체제의 3점대 버전을 고를까 고민하다가 사실 3점대 버전은 레퍼런스도 많이 없고 익숙하지 않아 2.7점대 버전이자 <font color=\"#c00000\">zookeeper 체제의 latest 버전을 받았다.</font></p>\n<div class=\"gatsby-highlight\" data-language=\"zsh\"><pre class=\"language-zsh\"><code class=\"language-zsh\">wget &lt;https://archive.apache.org/dist/kafka/2.7.1/kafka_2.12-2.7.1.tgz&gt; \ntar -xvzf kafka_2.12-2.7.1.tgz \ncd kafka_2.12-2.7.1 </code></pre></div>\n<h3 id=\"kafka-server-configuration\" style=\"position:relative;\"><a href=\"#kafka-server-configuration\" aria-label=\"kafka server configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kafka server configuration</h3>\n<p>환경변수 설정 및 advertised.listeners를 본인의 호스트로 설정해준다. 나같은 경우는 localhost로 해주었다:)</p>\n<div class=\"gatsby-highlight\" data-language=\"zsh\"><pre class=\"language-zsh\"><code class=\"language-zsh\">export KAFKA_HEAP_OPTS=&quot;-Xmx400m -Xms400m&quot; \nvi config/server.properties \nlisteners=PLAINTEXT://:9092 \nadvertised.listeners=PLAINTEXT://{your_host_name}:9092 </code></pre></div>\n<h3 id=\"zookeeper-server-start\" style=\"position:relative;\"><a href=\"#zookeeper-server-start\" aria-label=\"zookeeper server start permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>zookeeper server start</h3>\n<p>여기서 좀 중요하다. 우리는 zookeeper 기반 카프카를 사용할건데 <font color=\"#c00000\">zookeeper의 기본포트는 2181다.</font> 문제는 Apache druid에도 zookeeper 기반에서 돌아가기 때문에 그냥 실행해주면 나중에 <font color=\"#c00000\">포트 충돌이 일어나게 된다.</font> 때문에 <font color=\"#c00000\">zookeeper.properties 파일 속 포트 번호를 다른 번호로 설정</font>해주어야 한다.\n설정 후에는 서버를 시작해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"zsh\"><pre class=\"language-zsh\"><code class=\"language-zsh\">./bin/zookeeper-server-start.sh config/zookeeper.properties</code></pre></div>\n<h3 id=\"kafka-server-start\" style=\"position:relative;\"><a href=\"#kafka-server-start\" aria-label=\"kafka server start permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kafka server start</h3>\n<p>카프카 서버 설정 파일 <font color=\"#c00000\">server.properties</font>속의 주키퍼 포트번호도 위와 동일하게 바꾸어주자</p>\n<div class=\"gatsby-highlight\" data-language=\"zsh\"><pre class=\"language-zsh\"><code class=\"language-zsh\">./bin/kafka-server-start.sh -daemon config/server.properties </code></pre></div>\n<h3 id=\"create-topic\" style=\"position:relative;\"><a href=\"#create-topic\" aria-label=\"create topic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create topic</h3>\n<p>토픽을 생성해준다. 파티션은 적당하게 3개 정도로 설정해두었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"zsh\"><pre class=\"language-zsh\"><code class=\"language-zsh\">./bin/kafka-topics.sh --create --topic bike-station-info \\\n--bootstrap-server localhost:9092 --partitions 3 </code></pre></div>\n<h3 id=\"describe\" style=\"position:relative;\"><a href=\"#describe\" aria-label=\"describe permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Describe</h3>\n<p>토픽이 올바르게 생성되었는지 —describe 옵션을 통해 확인해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"zsh\"><pre class=\"language-zsh\"><code class=\"language-zsh\">./bin/kafka-topics.sh --describe --topic bike-station-info \\\n--bootstrap-server localhost:9092</code></pre></div>\n<h3 id=\"producer-start\" style=\"position:relative;\"><a href=\"#producer-start\" aria-label=\"producer start permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Producer start</h3>\n<p>서울시 열린데이터광장에서 받아온 API 키를 발급받고 bin파일에 기록하여 <font color=\"#c00000\">보안적인 측면을 신경썼다.</font>\n정거장 정보는 2000개지만 한번에 받아올 수 있는 데이터가 1000개로 제한되어 있어 그것에 맞게 코드를 짰다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">from</span> kafka <span class=\"token keyword\">import</span> KafkaProducer\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime\n\n<span class=\"token comment\"># Kafka 설정</span>\ntopicName <span class=\"token operator\">=</span> <span class=\"token string\">\"bike-station-info\"</span>\nproducer <span class=\"token operator\">=</span> KafkaProducer<span class=\"token punctuation\">(</span>bootstrap_servers<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"localhost:9092\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\nvalue_serializer<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 따릉이 API URL</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">request_seoul_api</span><span class=\"token punctuation\">(</span>api_key<span class=\"token punctuation\">,</span> start_index<span class=\"token punctuation\">,</span> end_index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tg_api_host <span class=\"token operator\">=</span> <span class=\"token string\">\"http://openapi.seoul.go.kr:8088\"</span>\n\tg_type <span class=\"token operator\">=</span> <span class=\"token string\">\"json\"</span>\n\tg_service <span class=\"token operator\">=</span> <span class=\"token string\">\"bikeList\"</span>\n\turl <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>g_api_host<span class=\"token punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>api_key<span class=\"token punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>g_type<span class=\"token punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>g_service<span class=\"token punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>start_index<span class=\"token punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>end_index<span class=\"token punctuation\">}</span></span><span class=\"token string\">/\"</span></span>\n\t<span class=\"token keyword\">return</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n\n  \n\n<span class=\"token comment\"># API 키 읽기</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"api_key.bin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> api_key_file<span class=\"token punctuation\">:</span>\n\tapi_key <span class=\"token operator\">=</span> api_key_file<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  \n\n<span class=\"token comment\"># 무한 루프를 돌면서 실시간으로 데이터를 가져와 Kafka에 전송</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token comment\"># 따릉이 API 호출</span>\n\t\tbike_stations <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 초기화</span>\n\t\t<span class=\"token keyword\">for</span> start_index <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 1부터 2000까지, 1000개 단위로 요청</span>\n\t\t\tend_index <span class=\"token operator\">=</span> start_index <span class=\"token operator\">+</span> <span class=\"token number\">999</span>\n\t\t\tresponse <span class=\"token operator\">=</span> request_seoul_api<span class=\"token punctuation\">(</span>api_key<span class=\"token punctuation\">,</span> start_index<span class=\"token punctuation\">,</span> end_index<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">if</span> response<span class=\"token punctuation\">.</span>status_code <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">:</span>\n\t\t\t\tbike_stations<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"rentBikeStatus\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"row\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\n\t\t<span class=\"token keyword\">for</span> station <span class=\"token keyword\">in</span> bike_stations<span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token comment\"># 필요한 정보 추출</span>\n\t\t\tdata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token string\">\"rackTotCnt\"</span><span class=\"token punctuation\">:</span> station<span class=\"token punctuation\">[</span><span class=\"token string\">\"rackTotCnt\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"stationName\"</span><span class=\"token punctuation\">:</span> station<span class=\"token punctuation\">[</span><span class=\"token string\">\"stationName\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"parkingBikeTotCnt\"</span><span class=\"token punctuation\">:</span> station<span class=\"token punctuation\">[</span><span class=\"token string\">\"parkingBikeTotCnt\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"shared\"</span><span class=\"token punctuation\">:</span> station<span class=\"token punctuation\">[</span><span class=\"token string\">\"shared\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"stationLatitude\"</span><span class=\"token punctuation\">:</span> station<span class=\"token punctuation\">[</span><span class=\"token string\">\"stationLatitude\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"stationLongitude\"</span><span class=\"token punctuation\">:</span> station<span class=\"token punctuation\">[</span><span class=\"token string\">\"stationLongitude\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"stationId\"</span><span class=\"token punctuation\">:</span> station<span class=\"token punctuation\">[</span><span class=\"token string\">\"stationId\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"timestamp\"</span><span class=\"token punctuation\">:</span> datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y-%m-%d %H:%M:%S\"</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token comment\"># Kafka에 데이터 전송</span>\n\t\t\tproducer<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>topicName<span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Sent data to Kafka: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\t\n\n\t\t<span class=\"token comment\"># 대기시간</span>\n\t\ttime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Error: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>e<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"check-consumer\" style=\"position:relative;\"><a href=\"#check-consumer\" aria-label=\"check consumer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Check consumer</h3>\n<div class=\"gatsby-highlight\" data-language=\"zsh\"><pre class=\"language-zsh\"><code class=\"language-zsh\">./bin/kafka-console-consumer.sh \\\n--bootstrap-server localhost:9092 \\\n--topic bike-station-info</code></pre></div>\n<p>아래와 같이 consumer가 데이터를 잘 받아오고 있으면 성공이다.!\n<img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21210&#x26;authkey=%21AGde50G47T-iha0&#x26;width=2890&#x26;height=666\" alt=\"consumer\"></p>\n<h2 id=\"set-up-druid-on-local\" style=\"position:relative;\"><a href=\"#set-up-druid-on-local\" aria-label=\"set up druid on local permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set up Druid on Local</h2>\n<h3 id=\"install-druid\" style=\"position:relative;\"><a href=\"#install-druid\" aria-label=\"install druid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>install Druid</h3>\n<p>드루이드는 무척이나 간단하나. 사전에 kafka를 설치하면서 zookeeper 포트 이동을 해주었기에 그냥 다운로드 받고 실행하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"zsh\"><pre class=\"language-zsh\"><code class=\"language-zsh\">### Druid 설치\nwget https://dlcdn.apache.org/druid/29.0.1/apache-druid-29.0.1-bin.tar.gz\ntar -xvzf apache-druid-29.0.1-bin.tar.gz\ncd apache-druid-29.0.1</code></pre></div>\n<h3 id=\"start-druid--connect\" style=\"position:relative;\"><a href=\"#start-druid--connect\" aria-label=\"start druid  connect permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>start druid &#x26; connect</h3>\n<p>전에 카프카를 올릴때 실수로 zookeeper의 포트를 변경하지 않았다면 2181 포트를 죽여야 한다. 만약 2181 포트가 살아 있다면 아래 명령어를 이용하자</p>\n<div class=\"gatsby-highlight\" data-language=\"zsh\"><pre class=\"language-zsh\"><code class=\"language-zsh\">### 포트 삭제\nlsof -i :2181\nkill -9 {PTD 번호}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"zsh\"><pre class=\"language-zsh\"><code class=\"language-zsh\">### Druid 실행\n./bin/start-druid\n\n### Druid 접속\nhttp://localhost:8888</code></pre></div>\n<h3 id=\"connect-with-kafka\" style=\"position:relative;\"><a href=\"#connect-with-kafka\" aria-label=\"connect with kafka permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Connect with kafka</h3>\n<p>아래 사진과 같이 <font color=\"#c00000\">로컬 주소</font>와 <font color=\"#c00000\">토픽 명</font>을 입력하여 드루이드와 카프카를 연동한다.\n<code class=\"language-text\">아래 사진 topic 명은 fastcampus로 되어 있는데 사진이 사전 테스트 사진으로 되어 있어서 그렇다.. 테스트 구축은 fastcampus 강의를 바탕으로 함.</code>\n<img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21207&#x26;authkey=%21AKza7ja6DdGD3oM&#x26;width=3024&#x26;height=1724\" alt=\"사진\"></p>\n<blockquote>\n<p>데이터 포멧 및 타임 스템프 지정 과 변환 및 필터, 스키마구성과 파티션 설정 등 Druid 내 다양한 환경 설정은 다른 post에서 다루고자 한다.</p>\n</blockquote>\n<h2 id=\"set-up-superset-on-docker\" style=\"position:relative;\"><a href=\"#set-up-superset-on-docker\" aria-label=\"set up superset on docker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set up Superset on Docker</h2>\n<p>먼저 git을 통해 공식 superset을 받아온 후 superset을 실행해준다. 꽤 올래걸리니 다른거 하다 와도 좋다.</p>\n<div class=\"gatsby-highlight\" data-language=\"zsh\"><pre class=\"language-zsh\"><code class=\"language-zsh\">### Superset git clone\ngit clone https://github.com/apache/superset.git\n\n### Superset 실행\ndocker compose -f docker-compose-non-dev.yml up</code></pre></div>\n<h2 id=\"connect-superset-and-druid\" style=\"position:relative;\"><a href=\"#connect-superset-and-druid\" aria-label=\"connect superset and druid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Connect superset and Druid</h2>\n<p>아래처럼 나의 로컬 드루이드 URL을 사용해서 superset과 druid를 연결할 수 있다.\nURL의 포맷은 <a href=\"https://superset.apache.org/docs/databases/druid/\">공식문서</a>를 참고하였다.\n<img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21209&#x26;authkey=%21AJOYaH5gbU8sqBU&#x26;width=3024&#x26;height=1728\" alt=\"connect druid\"></p>\n<h2 id=\"create-dashboard-on-superset\" style=\"position:relative;\"><a href=\"#create-dashboard-on-superset\" aria-label=\"create dashboard on superset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create DashBoard on Superset</h2>\n<p>이제 아래 처럼 Superset을 이용해 Dash보드를 구성할 수 있다. 이번에 Superset을 완전 처음 쓰는거라 아직 기능적인 이해도는 떨어지지만 점차 기능을 추가해나갈 예정이다.\n<img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21208&#x26;authkey=%21AEr5A4PxVVTdSBk&#x26;width=3248&#x26;height=2112\" alt=\"dash board\"></p>\n<p>생각보다 Superset을 쓰는 방법이 쉽지많은 않다. 아래 강의를 통해 조금은 알아보려고 한다.\n<a href=\"https://www.udemy.com/course/apache-superset-for-data-engineers-hands-on/?couponCode=ST6MT42324\">Superset 강의</a></p>\n<h1 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h1>\n<p>일단은 성공적으로 실시간 파이프라인 구축을 마칠 수 있었다. 사실 이번 개인 프로젝트의 목적은 대시보드가 중심이 아니다. 오픈소스와 speed layer을 활용하여 실시간 대시보드를 성공적으로 구축했는가에 초점이 있다. 때문에 대시보드를 상세하게 구축하는데 초점을 두지는 않기로 했다. 언젠가 BI 엔지니어와 협업하게 된다면 그때 커뮤니케이션을 통해서 잘 만들어갈 수 있을 것이라 생각한다. 현재 진행중인 클라우드 서비스를 통한 실시간 대시보드 구축 프로젝트에서 BI 담당이신 박지현님과 충분한 커뮤니케이션을 통해 역량을 강화하고자 한다.</p>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://medium.com/@emergeit/realtime-data-streaming-with-apache-kafka-apache-pinot-apache-druid-and-apache-superset-e67161eb9666\">Project reference</a>\n<a href=\"https://www.udemy.com/course/apache-superset-for-data-engineers-hands-on/?couponCode=ST6MT42324\">Superset에 대하여</a>\n<a href=\"https://github.com/apache/superset\">Superset git</a>\n<a href=\"https://www.udemy.com/course/apache-druid-a-hands-on-course/\">Druid 기초</a>\n<a href=\"https://www.apache.org/dyn/closer.cgi?path=/druid/29.0.1/apache-druid-29.0.1-bin.tar.gz\">APACHE DRUID</a>\n<a href=\"https://statisticsfox.github.io/Data%20Engineering/kafka/\">Kafka Basic</a>\n<a href=\"https://imply.io/blog/choosing-a-database-for-real-time-analytics-druid-and-pinot/\">Pinot VS Druid</a></p>","excerpt":"Base 이번에 한이음의 일환으로 클라우드 환경에서 실시간 따릉이 대시보드를 만들게 되었다. 다만 내 역할이 데이터 엔지니어링 및 인프라에 국한되어 있어 개인적으로 오픈소스를 활용하여 로컬에서 하나를 더 만들어 보려고 한다. 때문에 레퍼런스를 찾던 도중 다음과 같은 글을 발견했다.\nhttps://medium.com/@emergeit/realtime-data-streaming-with-apache-kafka-apache-pinot-apache-druid-and-apache-superset-e67161eb9666\n2년이 넘은 자료이기는 하지만 내 요구사항을 모두 만족했기에 아주 적합한 래퍼런스였다.\n그럼 이제 시작해보자\n시작해보자 Ddareungi real-time Dashboard architecture Dashboard architecture 위는 내가 수정한 아키텍처다. 신경 쓴 부분은 아래와 같다. Docker는 Superset을 올릴때만 사용하고자 한다. 레퍼런스에서는 모든 …","frontmatter":{"date":"April 25, 2024","title":"Realtime data streaming with Apache Kafka, Druid, Superset","categories":"Data_Engineering","author":"최지혁","emoji":"🚲"},"fields":{"slug":"/Data Engineering/Ddareungi real-time Dashboard architecture/"}},"next":{"id":"c8938597-f720-59b3-aeff-05495be9093f","html":"<p><img src=\"https://fs.buttercms.com/resize=width:940/308TQEVTEe468SWNPWwn\" alt=\"사진\"><em>카프카 로고</em>\n이번에 카프카를 로컬에서도 돌려보고 클라우드 환경에서도 다뤄보게 되었다. 그래서 카프카의 구조나 기본 개념에 대해 정리를 하고 가야할 필요성을 느꼈다.</p>\n<p>물론 실제 구축을 할때는 인프라적인 측면에서 더 애를 먹는다. 방화벽 설정이라던지.. 그래서 기본적인 개념에 대해서는 약간 소홀해 지는 경향이 있었다.</p>\n<p>아래 토픽 생성할 때의 shell 명령어를 보자</p>\n<div class=\"gatsby-highlight\" data-language=\"zsh\"><pre class=\"language-zsh\"><code class=\"language-zsh\">$&gt;./bin/kafka-topics.sh --create --topic fastcampus \\\n--bootstrap-server localhost:9092 --partitions 3 --replication-factor 2</code></pre></div>\n<p>사실 이 문구를 그냥 copy/paste 한다면야 생성 가능하겠지만 <code class=\"language-text\">--replication-factor 2</code>라는 명령어가 어떤 의미인지 잘 모른다면 사실상 kafka를 사용하는 의미가 없다.</p>\n<p>때문에 이번 기회에 깊이있게는 아니더라도 대략적으로 정리를 해보려고 한다.</p>\n<h1 id=\"back-ground-of-kafka\" style=\"position:relative;\"><a href=\"#back-ground-of-kafka\" aria-label=\"back ground of kafka permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Back ground of Kafka</h1>\n<h2 id=\"kafka는-왜-kafka일까\" style=\"position:relative;\"><a href=\"#kafka%EB%8A%94-%EC%99%9C-kafka%EC%9D%BC%EA%B9%8C\" aria-label=\"kafka는 왜 kafka일까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Kafka는 왜 Kafka일까?</h2>\n<p>카프카의 창시자인 Jay Kreps는 <font color=\"#c00000\">kafka는 쓰기에 최적화된 시스템</font>이기에 작가의 이름을 붙이는게 낫다고 생각하여 본인이 좋아하는 작가인 프란츠 카프카의 이름을 오픈소스 프로젝트 이름으로 명명했다.</p>\n<h2 id=\"before-kafka--after-kafka\" style=\"position:relative;\"><a href=\"#before-kafka--after-kafka\" aria-label=\"before kafka  after kafka permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Before Kafka &#x26; After kafka</h2>\n<h3 id=\"before-kafka\" style=\"position:relative;\"><a href=\"#before-kafka\" aria-label=\"before kafka permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Before Kafka</h3>\n<ol>\n<li>앱이 하나의 서버 혹은 여러 서버에 직접 메트릭을 전송</li>\n</ol>\n<p><img src=\"https://genmwill.wordpress.com/wp-content/uploads/2015/09/data-flow-ugly.png\" alt=\"사진\"></p>\n<h3 id=\"after-kafka\" style=\"position:relative;\"><a href=\"#after-kafka\" aria-label=\"after kafka permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>After kafka</h3>\n<ol>\n<li>중앙집중형의 Pub/sub 메시징 시스템을 통해 여러 앱으로부터 메트릭을 수신한다.</li>\n</ol>\n<p><img src=\"https://genmwill.wordpress.com/wp-content/uploads/2015/09/stream-centric-architecture1.png\" alt=\"사진\"></p>\n<h2 id=\"kafka의-장점이자-목표\" style=\"position:relative;\"><a href=\"#kafka%EC%9D%98-%EC%9E%A5%EC%A0%90%EC%9D%B4%EC%9E%90-%EB%AA%A9%ED%91%9C\" aria-label=\"kafka의 장점이자 목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kafka의 장점이자 목표</h2>\n<blockquote>\n<p>push/pull 모델을 사용하여 <font color=\"#c00000\"><u>producer 와 consummer의 분리</u></font>\n여러 Consumer를 허용하도록 메시징 시스템 내에서 <u><font color=\"#c00000\">메시지 데이터에 대한 지속성 제공</font></u>(데이터를 소비해도 삭제되지 않음)\n<u><font color=\"#c00000\">높은 메시지 처리량</font></u>을 위한 최적화 분산 처리로 속도를 최적화 함\n시스템의<font color=\"#c00000\"> <u>수평적 확장</u></font>이 쉽다.</p>\n</blockquote>\n<h1 id=\"kafka---core\" style=\"position:relative;\"><a href=\"#kafka---core\" aria-label=\"kafka   core permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Kafka - Core</h1>\n<h2 id=\"kafka의-기본-아이디어\" style=\"position:relative;\"><a href=\"#kafka%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\" aria-label=\"kafka의 기본 아이디어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kafka의 기본 아이디어</h2>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21191&#x26;authkey=%21AC2HGNuR6n4NqmI&#x26;width=1799&#x26;height=691\" alt=\"사진\"></p>\n<h4 id=\"카프카에-u데이터를-넣는u-font-colorc00000producerfont\" style=\"position:relative;\"><a href=\"#%EC%B9%B4%ED%94%84%EC%B9%B4%EC%97%90-u%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EB%84%A3%EB%8A%94u-font-colorc00000producerfont\" aria-label=\"카프카에 u데이터를 넣는u font colorc00000producerfont permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>카프카에 <u>데이터를 넣는</u> <font color=\"#c00000\">Producer</font></h4>\n<h4 id=\"그-u데이터를-꺼내가는u-font-colorc00000consumerfont\" style=\"position:relative;\"><a href=\"#%EA%B7%B8-u%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EA%BA%BC%EB%82%B4%EA%B0%80%EB%8A%94u-font-colorc00000consumerfont\" aria-label=\"그 u데이터를 꺼내가는u font colorc00000consumerfont permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그 <u>데이터를 꺼내가는</u> <font color=\"#c00000\">consumer</font></h4>\n<h4 id=\"그-u데이터가-들어가는u-공간인-font-colorc00000topicfont\" style=\"position:relative;\"><a href=\"#%EA%B7%B8-u%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-%EB%93%A4%EC%96%B4%EA%B0%80%EB%8A%94u-%EA%B3%B5%EA%B0%84%EC%9D%B8-font-colorc00000topicfont\" aria-label=\"그 u데이터가 들어가는u 공간인 font colorc00000topicfont permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그 <u>데이터가 들어가는</u> 공간인 <font color=\"#c00000\">Topic</font></h4>\n<ul>\n<li>topic은 사실상 <u>카프카를 사용하는 이유</u>이다.</li>\n<li>카프카에서 메시지를 구분하는 단위다.(파일 시스템의 폴더와 유사)</li>\n<li>어러 토픽으로 이뤄질 수 있고 목적에 따라 이름을 붙일 수 있다. -> 폴더에 이름 붙이는거와 같음</li>\n</ul>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21200&#x26;authkey=%21ANuASgyQOYKM1og&#x26;width=1450&#x26;height=472\" alt=\"사진\"></p>\n<h2 id=\"kafka의-구성요소\" style=\"position:relative;\"><a href=\"#kafka%EC%9D%98-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\" aria-label=\"kafka의 구성요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kafka의 구성요소</h2>\n<h3 id=\"topic\" style=\"position:relative;\"><a href=\"#topic\" aria-label=\"topic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Topic</h3>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21205&#x26;authkey=%21AL8SRGxSZtDDeuM&#x26;width=1192&#x26;height=428\" alt=\"사진\"></p>\n<ul>\n<li><u><font color=\"#c00000\">메시지의 구분 단위</font></u>이며 내부에서 여러 개의 파티션으로 구성된다.</li>\n<li>파티션은 병렬 처리를 위한 <font color=\"#c00000\"><u>데이터를 담는 공간</u></font>이며 파티션에 담긴 <u><font color=\"#c00000\">데이터를 레코드</font></u>라고 한다.</li>\n</ul>\n<h3 id=\"broker\" style=\"position:relative;\"><a href=\"#broker\" aria-label=\"broker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>broker</h3>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21196&#x26;authkey=%21ALBdoeTxvLTO6S0&#x26;width=1230&#x26;height=284\" alt=\"사진\"></p>\n<ul>\n<li>카프카가 설치되어 있는 서버 -> 보통 3개 이상의 브로커로 구성한다.</li>\n</ul>\n<h3 id=\"partition\" style=\"position:relative;\"><a href=\"#partition\" aria-label=\"partition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>partition</h3>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21200&#x26;authkey=%21ANuASgyQOYKM1og&#x26;width=1450&#x26;height=472\" alt=\"사진\"></p>\n<ul>\n<li><strong>파티션마다</strong> 각 메시지가 0부터 1씩 증가하는 offset 값을 갖는다</li>\n<li>큐(queue)와 비슷한 구조로 FIFO처럼 먼저 들어간 레코드는 컨슈머가 먼저 가져가게 된다.\n→ <u><font color=\"#c00000\">하지만 데이터를 가져간다고 레코드가 삭제되지 않는다.</font></u></li>\n</ul>\n<blockquote>\n<p>➡️ 레코드가 삭제되는 지점은 설정가능하다.</p>\n<ul>\n<li>레코드 보존시간 -> <code class=\"language-text\">log.retension.ms</code></li>\n<li>레코드 보존크기 -> <code class=\"language-text\">log.retension.type</code></li>\n</ul>\n<p>➡️ 삭제되지 않는다의 의미</p>\n<ul>\n<li>다른 Consumer가 다시 0qjs offset부터 가져갈 수 있다는 것을 의미한다.</li>\n</ul>\n</blockquote>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21195&#x26;authkey=%21ACDfXcKNr5aL7qA&#x26;width=1264&#x26;height=519\" alt=\"사진\"></p>\n<ul>\n<li>카프카 병렬처리의 핵심</li>\n<li>Topic 생성 시 partition 개수를 지정 가능하며 이를 늘릴 수는 있으나, 줄일 수는 없다.</li>\n<li>레코드가 어느 파티션으로 갈지 결정하는 방법\n<ul>\n<li>key 값이 존재하지 않는 경우 → Round-robin 방식으로 고르게 분배</li>\n<li>key 값이 존재하는 경우 → key를 hash 함수에 넣어서 파티션 결정</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"isrin-sync-replica\" style=\"position:relative;\"><a href=\"#isrin-sync-replica\" aria-label=\"isrin sync replica permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ISR(In Sync Replica)</h3>\n<p>파티션 복제는 곧 -> 고가용성을 의미한다.</p>\n<ul>\n<li>원본이 Leader, 복사본이 Follower -> 리더에 장애 날 경우 follower가 leader로 승격한다.</li>\n</ul>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21199&#x26;authkey=%21APFnyOcvfXPurao&#x26;width=1167&#x26;height=385\" alt=\"사진\"></p>\n<h3 id=\"producer\" style=\"position:relative;\"><a href=\"#producer\" aria-label=\"producer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>producer</h3>\n<ul>\n<li>토픽에 해당하는 메시지 생성, 특정 토픽으로 데이터를 Publish</li>\n</ul>\n<h4 id=\"producer의-내부-구조\" style=\"position:relative;\"><a href=\"#producer%EC%9D%98-%EB%82%B4%EB%B6%80-%EA%B5%AC%EC%A1%B0\" aria-label=\"producer의 내부 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>producer의 내부 구조</h4>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21204&#x26;authkey=%21AJtaBMq0c8chJjo&#x26;width=720&#x26;height=319\" alt=\"사진\"></p>\n<ul>\n<li><strong>ProducerRecord</strong> : 프로듀서에서 생성하는 레코드</li>\n<li><strong>send()</strong> : 레코드 전송 요청 메소드</li>\n<li><strong>Partitioner</strong> : 어느 파티션으로 전송할지 지정</li>\n<li><strong>Accumulator</strong> : 배치로 묶어 전송할 데이터를 모으는 버퍼</li>\n<li><strong>Sender</strong> : Accumulator의 메시지를 Fetch하여 브로커로 전송</li>\n</ul>\n<h4 id=\"ack-설정에-따른-가용성과-속도의-trade-off\" style=\"position:relative;\"><a href=\"#ack-%EC%84%A4%EC%A0%95%EC%97%90-%EB%94%B0%EB%A5%B8-%EA%B0%80%EC%9A%A9%EC%84%B1%EA%B3%BC-%EC%86%8D%EB%8F%84%EC%9D%98-trade-off\" aria-label=\"ack 설정에 따른 가용성과 속도의 trade off permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ACK 설정에 따른 가용성과 속도의 Trade off</h4>\n<p>보통 요구 사항에 따라 결정한다.</p>\n<h5 id=\"font-colorc00000ack--0font\" style=\"position:relative;\"><a href=\"#font-colorc00000ack--0font\" aria-label=\"font colorc00000ack  0font permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><font color=\"#c00000\"><strong>ACK = 0</strong></font></h5>\n<ul>\n<li>리더에게 전송하고 <u><font color=\"#c00000\">응답값을 받지 않는다.</font></u></li>\n<li>리더에 잘 갔는지도, 복제되었는지도 알 수 없다.</li>\n</ul>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21194&#x26;authkey=%21AMZSSrIZN5UirAY&#x26;width=1184&#x26;height=362\" alt=\"사진\"></p>\n<h5 id=\"font-colorc00000ack--1font\" style=\"position:relative;\"><a href=\"#font-colorc00000ack--1font\" aria-label=\"font colorc00000ack  1font permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><font color=\"#c00000\"><strong>ACK = 1</strong></font></h5>\n<ul>\n<li>리더에게 전송하고, <u><font color=\"#c00000\">리더에게만 응답값을 받는다.</font></u></li>\n<li>리더에게는 잘 갔는지 알 수 있지만, 잘 복제되었는지는 알 수 없다.</li>\n</ul>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21192&#x26;authkey=%21AKxo8F3KmEECInw&#x26;width=1171&#x26;height=345\" alt=\"사진\"></p>\n<h5 id=\"font-colorc00000ack--allfont\" style=\"position:relative;\"><a href=\"#font-colorc00000ack--allfont\" aria-label=\"font colorc00000ack  allfont permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><font color=\"#c00000\"><strong>ACK = all</strong></font></h5>\n<ul>\n<li>리더에게 전송하고, 리더와 팔로워 <u><font color=\"#c00000\">모두에게 응답값을 받는다.</font></u></li>\n</ul>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21193&#x26;authkey=%21AIPcapuAQe40qDI&#x26;width=1163&#x26;height=364\" alt=\"사진\"></p>\n<h3 id=\"consumer\" style=\"position:relative;\"><a href=\"#consumer\" aria-label=\"consumer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Consumer</h3>\n<ul>\n<li>토픽의 파티션으로부터 데이터 polling</li>\n</ul>\n<h4 id=\"consumer의-내부-구조\" style=\"position:relative;\"><a href=\"#consumer%EC%9D%98-%EB%82%B4%EB%B6%80-%EA%B5%AC%EC%A1%B0\" aria-label=\"consumer의 내부 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Consumer의 내부 구조</h4>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21198&#x26;authkey=%21AF1Gh5erXuILV_s&#x26;width=720&#x26;height=284\" alt=\"사진\"></p>\n<ul>\n<li><strong>Fetcher</strong> : 리더 파티션으로부터 레코드들을 가져와서 대기</li>\n<li><strong>poll()</strong> : Fetcher에 있는 레코드를 리턴</li>\n<li><strong>ConsumerRecord</strong> : 처리하고자 하는 레코드 모임</li>\n</ul>\n<h4 id=\"파티션-offset-위치-기록\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%ED%8B%B0%EC%85%98-offset-%EC%9C%84%EC%B9%98-%EA%B8%B0%EB%A1%9D\" aria-label=\"파티션 offset 위치 기록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파티션 offset 위치 기록</h4>\n<ul>\n<li>파티션에 들어간 데이터는 <font color=\"#c00000\"><u>파티션 내에서 고유한 번호(offset)를 갔는다</u></font></li>\n</ul>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21202&#x26;authkey=%21AO9KwJqCCmTw_Ok&#x26;width=1129&#x26;height=269\" alt=\"사진\"></p>\n<ul>\n<li>consumer가 어느 지점까지 읽었는지 확인하기위한 용도이다.\n<ul>\n<li>장애로 인해 재실행 되었을때 중단시점을 알기에 <font color=\"#c00000\"><u>데이터 중복 및 손실이 일어나는 것을 방지</u></font>한다.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21203&#x26;authkey=%21AMAdXiS0iJTbALA&#x26;width=720&#x26;height=205\" alt=\"사진\"></p>\n<h4 id=\"consumer-group\" style=\"position:relative;\"><a href=\"#consumer-group\" aria-label=\"consumer group permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Consumer group</h4>\n<ul>\n<li>여러 파티션을 가진 토픽에 대해서 consumer를 병렬 처리할 때 사용한다.</li>\n<li>서로 다른 그룹에 속하면 영향을 미치지 않으므로 동일한 파티션 접근이 가능하다.</li>\n</ul>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21197&#x26;authkey=%21AAYbCKdPKW-lGnM&#x26;width=1150&#x26;height=412\" alt=\"사진\"></p>\n<h4 id=\"lag-metric\" style=\"position:relative;\"><a href=\"#lag-metric\" aria-label=\"lag metric permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lag metric</h4>\n<ul>\n<li><font color=\"#c00000\"> 컨슈머가 마지막으로 읽은 offset과 프로듀서가 마지막으로 넣은 offset의 차이</font></li>\n<li>파티션 마다 lag 값을 특정할 수 있다.</li>\n<li>lag의 차이가 크게 되면 실시간이 실시간이 아니게 되어 버리거나 할 수 있으므로 성능이 나오지 않거나, 비정상 동작을 할 때 모니터링할 수 있다.</li>\n</ul>\n<p><img src=\"https://onedrive.live.com/embed?resid=9DED56BE8CF81C92%21201&#x26;authkey=%21AAkRS3QCoBy9wz8&#x26;width=434&#x26;height=705\" alt=\"사진\"></p>\n<h1 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h1>\n<p>이렇게 kafka의 기본 개념과 구성요소에 대해서 간단하게나마 정리를 해보았다. 사실 kafka를 잘 아시는 분이라면 ‘하나 빠졌는데!!!!’하실 수 있을 것 같다.</p>\n<p>바로 metadata 보관 장소이자 브로커가 사춘기 왔을때 잡아주는 엄마같은 존재인 zookeeper다.</p>\n<p>사실 zookeeper를 다루지 않은 이유는 kafka 3.x.x버전에서는 zookeeper를 더 이상 사용하지 않고 <font color=\"#c00000\">KRaft</font>를 사용한다. zookeeper는 kafka와 완전 별개의 애플리케이션이기에 사실상 계모같은 존재였다. 때문에 안전성이나 확장성 측면에서 불안하여 3.x.x버전 부터는 KRaft라는 kafka 단일 애플리케이션 즉, 진짜 엄마를 찾아서 사용한다.</p>\n<p>그래서 나중에 둘의 차이에 대해서 다로 포스팅하고자 이번 포스팅에서는 제외하기로 하였다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#kafka%EB%8A%94-%EC%99%9C-kafka%EC%9D%BC%EA%B9%8C\">Kafka는 왜 Kafka일까?</a></p>\n</li>\n<li>\n<p><a href=\"#before-kafka--after-kafka\">Before Kafka &#x26; After kafka</a></p>\n<ul>\n<li><a href=\"#before-kafka\">Before Kafka</a></li>\n<li><a href=\"#after-kafka\">After kafka</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#kafka%EC%9D%98-%EC%9E%A5%EC%A0%90%EC%9D%B4%EC%9E%90-%EB%AA%A9%ED%91%9C\">kafka의 장점이자 목표</a></p>\n</li>\n<li>\n<p><a href=\"#kafka%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\">kafka의 기본 아이디어</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%B9%B4%ED%94%84%EC%B9%B4%EC%97%90-u%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EB%84%A3%EB%8A%94u-font-colorc00000producerfont\">카프카에 <u>데이터를 넣는</u> <font color=\"#c00000\">Producer</font></a></li>\n<li><a href=\"#%EA%B7%B8-u%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EA%BA%BC%EB%82%B4%EA%B0%80%EB%8A%94u-font-colorc00000consumerfont\">그 <u>데이터를 꺼내가는</u> <font color=\"#c00000\">consumer</font></a></li>\n<li><a href=\"#%EA%B7%B8-u%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-%EB%93%A4%EC%96%B4%EA%B0%80%EB%8A%94u-%EA%B3%B5%EA%B0%84%EC%9D%B8-font-colorc00000topicfont\">그 <u>데이터가 들어가는</u> 공간인 <font color=\"#c00000\">Topic</font></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#kafka%EC%9D%98-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\">kafka의 구성요소</a></p>\n<ul>\n<li>\n<p><a href=\"#topic\">Topic</a></p>\n</li>\n<li>\n<p><a href=\"#broker\">broker</a></p>\n</li>\n<li>\n<p><a href=\"#partition\">partition</a></p>\n</li>\n<li>\n<p><a href=\"#isrin-sync-replica\">ISR(In Sync Replica)</a></p>\n</li>\n<li>\n<p><a href=\"#producer\">producer</a></p>\n<ul>\n<li>\n<p><a href=\"#producer%EC%9D%98-%EB%82%B4%EB%B6%80-%EA%B5%AC%EC%A1%B0\">producer의 내부 구조</a></p>\n</li>\n<li>\n<p><a href=\"#ack-%EC%84%A4%EC%A0%95%EC%97%90-%EB%94%B0%EB%A5%B8-%EA%B0%80%EC%9A%A9%EC%84%B1%EA%B3%BC-%EC%86%8D%EB%8F%84%EC%9D%98-trade-off\">ACK 설정에 따른 가용성과 속도의 Trade off</a></p>\n<ul>\n<li><a href=\"#font-colorc00000ack--0font\"><font color=\"#c00000\"><strong>ACK = 0</strong></font></a></li>\n<li><a href=\"#font-colorc00000ack--1font\"><font color=\"#c00000\"><strong>ACK = 1</strong></font></a></li>\n<li><a href=\"#font-colorc00000ack--allfont\"><font color=\"#c00000\"><strong>ACK = all</strong></font></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#consumer\">Consumer</a></p>\n<ul>\n<li><a href=\"#consumer%EC%9D%98-%EB%82%B4%EB%B6%80-%EA%B5%AC%EC%A1%B0\">Consumer의 내부 구조</a></li>\n<li><a href=\"#%ED%8C%8C%ED%8B%B0%EC%85%98-offset-%EC%9C%84%EC%B9%98-%EA%B8%B0%EB%A1%9D\">파티션 offset 위치 기록</a></li>\n<li><a href=\"#consumer-group\">Consumer group</a></li>\n<li><a href=\"#lag-metric\">Lag metric</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"April 19, 2024","title":"Apache Kafka에 대해 전반적으로 알아보자","categories":"Data_Engineering","author":"최지혁","emoji":"💫"},"fields":{"slug":"/Data Engineering/kafka/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://statisticsfox.github.io","comments":{"utterances":{"repo":"StatisticsFox/blog-comments"}}}}},"pageContext":{"slug":"/Data Engineering/Ddareungi real-time Dashboard architecture/","nextSlug":"/Data Engineering/kafka/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}